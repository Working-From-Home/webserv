<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2549px" preserveAspectRatio="none" style="width:3486px;height:2549px;background:#FFFFFF;" version="1.1" viewBox="0 0 3486 2549" width="3486px" zoomAndPan="magnify"><defs><filter height="300%" id="fn3gdeeh4yhap" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[2958fbf0cf116a17b62fd82d2560c2cb]
cluster clnt--><polygon fill="#FFFFFF" filter="url(#fn3gdeeh4yhap)" points="1008.5,342.5,1043.5,342.5,1050.5,364.7969,1270.5,364.7969,1270.5,569.5,1008.5,569.5,1008.5,342.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1008.5" x2="1050.5" y1="364.7969" y2="364.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="29" x="1012.5" y="357.4951">clnt</text><!--MD5=[72fae8e1779ba7dedab19f6352fd74e8]
cluster parser--><polygon fill="#FFFFFF" filter="url(#fn3gdeeh4yhap)" points="1650.5,6,1708.5,6,1715.5,28.2969,3469.5,28.2969,3469.5,1399.5,1650.5,1399.5,1650.5,6" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1650.5" x2="1715.5" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="1654.5" y="20.9951">parser</text><!--MD5=[95a29eb3a89a4bc4d7ac2991752bde1e]
cluster parser.parser::http--><polygon fill="#FFFFFF" filter="url(#fn3gdeeh4yhap)" points="2379.5,49,2481.5,49,2488.5,71.2969,3445.5,71.2969,3445.5,276,2379.5,276,2379.5,49" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2379.5" x2="2488.5" y1="71.2969" y2="71.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="96" x="2383.5" y="63.9951">parser::http</text><!--MD5=[66b8634aa6783c47ab7e2fafd66a99d7]
cluster sckt--><polygon fill="#FFFFFF" filter="url(#fn3gdeeh4yhap)" points="1246.5,642,1285.5,642,1292.5,664.2969,1576.5,664.2969,1576.5,895,1246.5,895,1246.5,642" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1246.5" x2="1292.5" y1="664.2969" y2="664.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="33" x="1250.5" y="656.9951">sckt</text><!--MD5=[a87a15c13a8fdb5d9aefbbee89df4b1b]
class clnt.Client--><rect codeLine="261" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="176.0469" id="clnt.Client" style="stroke:#A80036;stroke-width:1.5;" width="230" x="1024.5" y="377.5"/><ellipse cx="1117.75" cy="393.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1120.7188,399.1406 Q1120.1406,399.4375 1119.5,399.5781 Q1118.8594,399.7344 1118.1563,399.7344 Q1115.6563,399.7344 1114.3281,398.0938 Q1113.0156,396.4375 1113.0156,393.3125 Q1113.0156,390.1875 1114.3281,388.5313 Q1115.6563,386.875 1118.1563,386.875 Q1118.8594,386.875 1119.5,387.0313 Q1120.1563,387.1875 1120.7188,387.4844 L1120.7188,390.2031 Q1120.0938,389.625 1119.5,389.3594 Q1118.9063,389.0781 1118.2813,389.0781 Q1116.9375,389.0781 1116.25,390.1563 Q1115.5625,391.2188 1115.5625,393.3125 Q1115.5625,395.4063 1116.25,396.4844 Q1116.9375,397.5469 1118.2813,397.5469 Q1118.9063,397.5469 1119.5,397.2813 Q1120.0938,397 1120.7188,396.4219 L1120.7188,399.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="35" x="1138.25" y="397.6543">Client</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1025.5" x2="1253.5" y1="409.5" y2="409.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1032.5" y="417.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="1044.5" y="423.7104">_socket : sckt::Socket</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1032.5" y="430.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="1044.5" y="436.5151">_pfd : struct pollfd</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1025.5" x2="1253.5" y1="443.1094" y2="443.1094"/><ellipse cx="1035.5" cy="454.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1044.5" y="457.3198">Client()</text><ellipse cx="1035.5" cy="466.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="1044.5" y="470.1245">~Client()</text><ellipse cx="1035.5" cy="479.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="201" x="1044.5" y="482.9292">getAddr() : sckt::addr_type {query}</text><ellipse cx="1035.5" cy="492.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="1044.5" y="495.7339">getFd() : sckt::fd_type {query}</text><ellipse cx="1035.5" cy="505.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="1044.5" y="508.5386">getPfd() : struct pollfd {query}</text><ellipse cx="1035.5" cy="518.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="1044.5" y="521.3433">setAddr(sckt::addr_type addr) : void</text><ellipse cx="1035.5" cy="530.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="1044.5" y="534.1479">setFd(sckt::fd_type fd) : void</text><ellipse cx="1035.5" cy="543.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="1044.5" y="546.9526">setPfd() : void</text><!--MD5=[03653400ed6ccc44e236f77c5d24f176]
class parser.IScanner--><rect codeLine="277" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="137.6328" id="parser.IScanner" style="stroke:#A80036;stroke-width:1.5;" width="121" x="1667" y="103"/><ellipse cx="1696.85" cy="119" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1696.9594,114.3438 L1695.8031,119.4219 L1698.1313,119.4219 L1696.9594,114.3438 Z M1695.475,112.1094 L1698.4594,112.1094 L1701.8188,124.5 L1699.3656,124.5 L1698.6,121.4375 L1695.3188,121.4375 L1694.5688,124.5 L1692.1313,124.5 L1695.475,112.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="56" x="1714.15" y="123.1543">IScanner</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1668" x2="1787" y1="135" y2="135"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1668" x2="1787" y1="143" y2="143"/><ellipse cx="1678" cy="154" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="1687" y="157.2104">~IScanner()</text><ellipse cx="1678" cy="166.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="1687" y="170.0151">eof() : bool</text><ellipse cx="1678" cy="179.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="63" x="1687" y="182.8198">get() : char</text><ellipse cx="1678" cy="192.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="72" x="1687" y="195.6245">peek() : char</text><ellipse cx="1678" cy="205.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="77" x="1687" y="208.4292">unget() : char</text><ellipse cx="1678" cy="218.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="95" x="1687" y="221.2339">getColumn() : int</text><ellipse cx="1678" cy="230.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="75" x="1687" y="234.0386">getLine() : int</text><!--MD5=[03a3e5cf65a4250f2ddeffa42169cd18]
class parser.Scanner--><rect codeLine="287" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="252.875" id="parser.Scanner" style="stroke:#A80036;stroke-width:1.5;" width="235" x="1974" y="339"/><ellipse cx="2061.25" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2064.2188,360.6406 Q2063.6406,360.9375 2063,361.0781 Q2062.3594,361.2344 2061.6563,361.2344 Q2059.1563,361.2344 2057.8281,359.5938 Q2056.5156,357.9375 2056.5156,354.8125 Q2056.5156,351.6875 2057.8281,350.0313 Q2059.1563,348.375 2061.6563,348.375 Q2062.3594,348.375 2063,348.5313 Q2063.6563,348.6875 2064.2188,348.9844 L2064.2188,351.7031 Q2063.5938,351.125 2063,350.8594 Q2062.4063,350.5781 2061.7813,350.5781 Q2060.4375,350.5781 2059.75,351.6563 Q2059.0625,352.7188 2059.0625,354.8125 Q2059.0625,356.9063 2059.75,357.9844 Q2060.4375,359.0469 2061.7813,359.0469 Q2062.4063,359.0469 2063,358.7813 Q2063.5938,358.5 2064.2188,357.9219 L2064.2188,360.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="52" x="2081.75" y="359.1543">Scanner</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1975" x2="2208" y1="371" y2="371"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1982" y="379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="1994" y="385.2104">_c : char</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1982" y="391.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="1994" y="398.0151">_column : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1982" y="404.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1994" y="410.8198">_lastColumn : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1982" y="417.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="52" x="1994" y="423.6245">_line : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1982" y="430.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="1994" y="436.4292">_inStream : std::istream&amp;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1975" x2="2208" y1="443.0234" y2="443.0234"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1982" y="451.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="1994" y="457.2339">Scanner()</text><ellipse cx="1985" cy="466.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="1994" y="470.0386">Scanner(std::istream&amp; inputStream)</text><ellipse cx="1985" cy="479.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1994" y="482.8433">~Scanner()</text><ellipse cx="1985" cy="492.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1994" y="495.6479">eof() : bool</text><ellipse cx="1985" cy="505.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="1994" y="508.4526">get() : char</text><ellipse cx="1985" cy="518.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="1994" y="521.2573">peek() : char</text><ellipse cx="1985" cy="530.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="1994" y="534.062">unget() : char</text><ellipse cx="1985" cy="543.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1994" y="546.8667">getColumn() : int</text><ellipse cx="1985" cy="556.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="75" x="1994" y="559.6714">getLine() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1982" y="566.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="1994" y="572.4761">moveBackward() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1982" y="579.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="1994" y="585.2808">moveForward() : void</text><!--MD5=[fee35e9045924dd20abaaed97b7b7945]
class parser.ScannerConfig--><rect codeLine="306" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="163.2422" id="parser.ScannerConfig" style="stroke:#A80036;stroke-width:1.5;" width="536" x="1823.5" y="90.5"/><ellipse cx="2041.75" cy="106.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2044.7188,112.1406 Q2044.1406,112.4375 2043.5,112.5781 Q2042.8594,112.7344 2042.1563,112.7344 Q2039.6563,112.7344 2038.3281,111.0938 Q2037.0156,109.4375 2037.0156,106.3125 Q2037.0156,103.1875 2038.3281,101.5313 Q2039.6563,99.875 2042.1563,99.875 Q2042.8594,99.875 2043.5,100.0313 Q2044.1563,100.1875 2044.7188,100.4844 L2044.7188,103.2031 Q2044.0938,102.625 2043.5,102.3594 Q2042.9063,102.0781 2042.2813,102.0781 Q2040.9375,102.0781 2040.25,103.1563 Q2039.5625,104.2188 2039.5625,106.3125 Q2039.5625,108.4063 2040.25,109.4844 Q2040.9375,110.5469 2042.2813,110.5469 Q2042.9063,110.5469 2043.5,110.2813 Q2044.0938,110 2044.7188,109.4219 L2044.7188,112.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="91" x="2062.25" y="110.6543">ScannerConfig</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1824.5" x2="2358.5" y1="122.5" y2="122.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1831.5" y="130.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="1843.5" y="136.7104">_scan : Scanner</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1831.5" y="143.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="1843.5" y="149.5151">_actualToken : Token</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1824.5" x2="2358.5" y1="156.1094" y2="156.1094"/><ellipse cx="1834.5" cy="167.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1843.5" y="170.3198">ScannerConfig(std::istream&amp; inputStream)</text><ellipse cx="1834.5" cy="179.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="1843.5" y="183.1245">~ScannerConfig()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1831.5" y="189.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="397" x="1843.5" y="195.9292">_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1831.5" y="202.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="510" x="1843.5" y="208.7339">_makeToken(ScopedEnum ::TokenKind kind, std::string value, int column, int line) : Token</text><ellipse cx="1834.5" cy="218.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="1843.5" y="221.5386">getToken() : Token</text><ellipse cx="1834.5" cy="231.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="1843.5" y="234.3433">peekToken() : Token</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1831.5" y="240.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="1843.5" y="247.1479">_charIsString(char c) : bool</text><!--MD5=[0d9ebab3398b7f12da4049a59f1f340d]
class parser.ScannerFD--><rect codeLine="318" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="291.2891" id="parser.ScannerFD" style="stroke:#A80036;stroke-width:1.5;" width="197" x="1667" y="320"/><ellipse cx="1727.25" cy="336" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1730.2188,341.6406 Q1729.6406,341.9375 1729,342.0781 Q1728.3594,342.2344 1727.6563,342.2344 Q1725.1563,342.2344 1723.8281,340.5938 Q1722.5156,338.9375 1722.5156,335.8125 Q1722.5156,332.6875 1723.8281,331.0313 Q1725.1563,329.375 1727.6563,329.375 Q1728.3594,329.375 1729,329.5313 Q1729.6563,329.6875 1730.2188,329.9844 L1730.2188,332.7031 Q1729.5938,332.125 1729,331.8594 Q1728.4063,331.5781 1727.7813,331.5781 Q1726.4375,331.5781 1725.75,332.6563 Q1725.0625,333.7188 1725.0625,335.8125 Q1725.0625,337.9063 1725.75,338.9844 Q1726.4375,340.0469 1727.7813,340.0469 Q1728.4063,340.0469 1729,339.7813 Q1729.5938,339.5 1730.2188,338.9219 L1730.2188,341.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="68" x="1747.75" y="340.1543">ScannerFD</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1668" x2="1863" y1="352" y2="352"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="360"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="1687" y="366.2104">_buffer : char</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="372.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="1687" y="379.0151">_c : char</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="385.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="1687" y="391.8198">_column : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="398.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="1687" y="404.6245">_fd : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="411.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1687" y="417.4292">_lastColumn : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="424.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="52" x="1687" y="430.2339">_line : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="436.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="1687" y="443.0386">_idx : size_t</text><ellipse cx="1678" cy="452.6328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="171" x="1687" y="455.8433">bufferSize : static const size_t</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1668" x2="1863" y1="462.4375" y2="462.4375"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="470.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="69" x="1687" y="476.6479">ScannerFD()</text><ellipse cx="1678" cy="486.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="1687" y="489.4526">ScannerFD(int fd)</text><ellipse cx="1678" cy="499.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="1687" y="502.2573">~ScannerFD()</text><ellipse cx="1678" cy="511.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1687" y="515.062">eof() : bool</text><ellipse cx="1678" cy="524.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="1687" y="527.8667">get() : char</text><ellipse cx="1678" cy="537.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="1687" y="540.6714">peek() : char</text><ellipse cx="1678" cy="550.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="1687" y="553.4761">unget() : char</text><ellipse cx="1678" cy="563.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1687" y="566.2808">getColumn() : int</text><ellipse cx="1678" cy="575.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="75" x="1687" y="579.0854">getLine() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="585.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="1687" y="591.8901">moveBackward() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1675" y="598.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="1687" y="604.6948">moveForward() : void</text><!--MD5=[f2523eb4e36dd592889bf80209906b66]
class parser.ScopedEnum::TokenKind--><rect codeLine="340" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="163.2422" id="parser.ScopedEnum::TokenKind" style="stroke:#A80036;stroke-width:1.5;" width="186" x="3022.5" y="1220.5"/><ellipse cx="3037.5" cy="1236.5" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3041.6094,1242.5 L3033.8906,1242.5 L3033.8906,1230.1094 L3041.6094,1230.1094 L3041.6094,1232.2656 L3036.3438,1232.2656 L3036.3438,1234.9375 L3041.1094,1234.9375 L3041.1094,1237.0938 L3036.3438,1237.0938 L3036.3438,1240.3438 L3041.6094,1240.3438 L3041.6094,1242.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="154" x="3051.5" y="1240.6543">ScopedEnum::TokenKind</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3023.5" x2="3207.5" y1="1252.5" y2="1252.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="38" x="3028.5" y="1266.7104">kColon</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="3028.5" y="1279.5151">kComma</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="3028.5" y="1292.3198">kEndOfInput</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="35" x="3028.5" y="1305.1245">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="3028.5" y="1317.9292">kIdentifier</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="3028.5" y="1330.7339">kLeftBrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="3028.5" y="1343.5386">kNewLine</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3028.5" y="1356.3433">kRightBrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="3028.5" y="1369.1479">kString</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3023.5" x2="3207.5" y1="1375.7422" y2="1375.7422"/><!--MD5=[b4d43a8aa66a9a2b64847e97cdbb1754]
class parser.ScopedEnum--><rect codeLine="352" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="48" id="parser.ScopedEnum" style="stroke:#A80036;stroke-width:1.5;" width="114" x="3058.5" y="754"/><ellipse cx="3073.5" cy="770" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3076.4688,775.6406 Q3075.8906,775.9375 3075.25,776.0781 Q3074.6094,776.2344 3073.9063,776.2344 Q3071.4063,776.2344 3070.0781,774.5938 Q3068.7656,772.9375 3068.7656,769.8125 Q3068.7656,766.6875 3070.0781,765.0313 Q3071.4063,763.375 3073.9063,763.375 Q3074.6094,763.375 3075.25,763.5313 Q3075.9063,763.6875 3076.4688,763.9844 L3076.4688,766.7031 Q3075.8438,766.125 3075.25,765.8594 Q3074.6563,765.5781 3074.0313,765.5781 Q3072.6875,765.5781 3072,766.6563 Q3071.3125,767.7188 3071.3125,769.8125 Q3071.3125,771.9063 3072,772.9844 Q3072.6875,774.0469 3074.0313,774.0469 Q3074.6563,774.0469 3075.25,773.7813 Q3075.8438,773.5 3076.4688,772.9219 L3076.4688,775.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="82" x="3087.5" y="774.1543">ScopedEnum</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3059.5" x2="3171.5" y1="786" y2="786"/><line style="stroke:#A80036;stroke-width:1.5;" x1="3059.5" x2="3171.5" y1="794" y2="794"/><!--MD5=[947b0119114e8f933bcfaac579dd76aa]
class parser.Token--><rect codeLine="355" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="99.2188" id="parser.Token" style="stroke:#A80036;stroke-width:1.5;" width="205" x="2894" y="416"/><ellipse cx="2973.25" cy="432" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2976.2188,437.6406 Q2975.6406,437.9375 2975,438.0781 Q2974.3594,438.2344 2973.6563,438.2344 Q2971.1563,438.2344 2969.8281,436.5938 Q2968.5156,434.9375 2968.5156,431.8125 Q2968.5156,428.6875 2969.8281,427.0313 Q2971.1563,425.375 2973.6563,425.375 Q2974.3594,425.375 2975,425.5313 Q2975.6563,425.6875 2976.2188,425.9844 L2976.2188,428.7031 Q2975.5938,428.125 2975,427.8594 Q2974.4063,427.5781 2973.7813,427.5781 Q2972.4375,427.5781 2971.75,428.6563 Q2971.0625,429.7188 2971.0625,431.8125 Q2971.0625,433.9063 2971.75,434.9844 Q2972.4375,436.0469 2973.7813,436.0469 Q2974.4063,436.0469 2975,435.7813 Q2975.5938,435.5 2976.2188,434.9219 L2976.2188,437.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="38" x="2993.75" y="436.1543">Token</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2895" x2="3098" y1="448" y2="448"/><ellipse cx="2905" cy="459" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="2914" y="462.2104">kind : ScopedEnum ::TokenKind</text><ellipse cx="2905" cy="471.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="2914" y="475.0151">column : int</text><ellipse cx="2905" cy="484.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="2914" y="487.8198">line : int</text><ellipse cx="2905" cy="497.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="2914" y="500.6245">value : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2895" x2="3098" y1="507.2188" y2="507.2188"/><!--MD5=[72561c5925aa6377ecddb603ff726ebb]
class parser.parser::http.ScannerHttpRequest--><rect codeLine="363" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="163.2422" id="parser.parser::http.ScannerHttpRequest" style="stroke:#A80036;stroke-width:1.5;" width="423" x="2785" y="90.5"/><ellipse cx="2926.75" cy="106.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2929.7188,112.1406 Q2929.1406,112.4375 2928.5,112.5781 Q2927.8594,112.7344 2927.1563,112.7344 Q2924.6563,112.7344 2923.3281,111.0938 Q2922.0156,109.4375 2922.0156,106.3125 Q2922.0156,103.1875 2923.3281,101.5313 Q2924.6563,99.875 2927.1563,99.875 Q2927.8594,99.875 2928.5,100.0313 Q2929.1563,100.1875 2929.7188,100.4844 L2929.7188,103.2031 Q2929.0938,102.625 2928.5,102.3594 Q2927.9063,102.0781 2927.2813,102.0781 Q2925.9375,102.0781 2925.25,103.1563 Q2924.5625,104.2188 2924.5625,106.3125 Q2924.5625,108.4063 2925.25,109.4844 Q2925.9375,110.5469 2927.2813,110.5469 Q2927.9063,110.5469 2928.5,110.2813 Q2929.0938,110 2929.7188,109.4219 L2929.7188,112.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="131" x="2947.25" y="110.6543">ScannerHttpRequest</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2786" x2="3207" y1="122.5" y2="122.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2793" y="130.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="2805" y="136.7104">_scan : Scanner</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2793" y="143.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="2805" y="149.5151">_actualToken : Token</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2786" x2="3207" y1="156.1094" y2="156.1094"/><ellipse cx="2796" cy="167.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="2805" y="170.3198">ScannerHttpRequest(std::istream&amp; inputStream)</text><ellipse cx="2796" cy="179.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="2805" y="183.1245">~ScannerHttpRequest()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2793" y="189.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="397" x="2805" y="195.9292">_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token</text><ellipse cx="2796" cy="205.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="180" x="2805" y="208.7339">getToken(bool skipLWS) : Token</text><ellipse cx="2796" cy="218.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="2805" y="221.5386">peekToken() : Token</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2793" y="228.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="2805" y="234.3433">_charIsString(char c) : bool</text><ellipse cx="2796" cy="243.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="2805" y="247.1479">getChar() : char</text><!--MD5=[f349b6d239fd9f9ee251f8e3641cb7bd]
class parser.parser::http.ScopedEnum::TokenKind--><rect codeLine="375" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="176.0469" id="parser.parser::http.ScopedEnum::TokenKind" style="stroke:#A80036;stroke-width:1.5;" width="186" x="3243.5" y="84"/><ellipse cx="3258.5" cy="100" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3262.6094,106 L3254.8906,106 L3254.8906,93.6094 L3262.6094,93.6094 L3262.6094,95.7656 L3257.3438,95.7656 L3257.3438,98.4375 L3262.1094,98.4375 L3262.1094,100.5938 L3257.3438,100.5938 L3257.3438,103.8438 L3262.6094,103.8438 L3262.6094,106 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="154" x="3272.5" y="104.1543">ScopedEnum::TokenKind</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3244.5" x2="3428.5" y1="116" y2="116"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="3249.5" y="130.2104">kCarriage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="38" x="3249.5" y="143.0151">kColon</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="3249.5" y="155.8198">kComma</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="3249.5" y="168.6245">kEndOfInput</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="35" x="3249.5" y="181.4292">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="29" x="3249.5" y="194.2339">kLWS</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="3249.5" y="207.0386">kLeftBrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="3249.5" y="219.8433">kNewLine</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3249.5" y="232.6479">kRightBrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="3249.5" y="245.4526">kString</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3244.5" x2="3428.5" y1="252.0469" y2="252.0469"/><!--MD5=[9ebdd5bcd2a4a695d07bb1e199730f62]
class parser.parser::http.ScopedEnum--><rect codeLine="388" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="48" id="parser.parser::http.ScopedEnum" style="stroke:#A80036;stroke-width:1.5;" width="114" x="2635.5" y="148"/><ellipse cx="2650.5" cy="164" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2653.4688,169.6406 Q2652.8906,169.9375 2652.25,170.0781 Q2651.6094,170.2344 2650.9063,170.2344 Q2648.4063,170.2344 2647.0781,168.5938 Q2645.7656,166.9375 2645.7656,163.8125 Q2645.7656,160.6875 2647.0781,159.0313 Q2648.4063,157.375 2650.9063,157.375 Q2651.6094,157.375 2652.25,157.5313 Q2652.9063,157.6875 2653.4688,157.9844 L2653.4688,160.7031 Q2652.8438,160.125 2652.25,159.8594 Q2651.6563,159.5781 2651.0313,159.5781 Q2649.6875,159.5781 2649,160.6563 Q2648.3125,161.7188 2648.3125,163.8125 Q2648.3125,165.9063 2649,166.9844 Q2649.6875,168.0469 2651.0313,168.0469 Q2651.6563,168.0469 2652.25,167.7813 Q2652.8438,167.5 2653.4688,166.9219 L2653.4688,169.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="82" x="2664.5" y="168.1543">ScopedEnum</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2636.5" x2="2748.5" y1="180" y2="180"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2636.5" x2="2748.5" y1="188" y2="188"/><!--MD5=[dadf3ffcb8425e4ad7a9514e4bae5d7b]
class parser.parser::http.Token--><rect codeLine="391" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="99.2188" id="parser.parser::http.Token" style="stroke:#A80036;stroke-width:1.5;" width="205" x="2395" y="122.5"/><ellipse cx="2474.25" cy="138.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2477.2188,144.1406 Q2476.6406,144.4375 2476,144.5781 Q2475.3594,144.7344 2474.6563,144.7344 Q2472.1563,144.7344 2470.8281,143.0938 Q2469.5156,141.4375 2469.5156,138.3125 Q2469.5156,135.1875 2470.8281,133.5313 Q2472.1563,131.875 2474.6563,131.875 Q2475.3594,131.875 2476,132.0313 Q2476.6563,132.1875 2477.2188,132.4844 L2477.2188,135.2031 Q2476.5938,134.625 2476,134.3594 Q2475.4063,134.0781 2474.7813,134.0781 Q2473.4375,134.0781 2472.75,135.1563 Q2472.0625,136.2188 2472.0625,138.3125 Q2472.0625,140.4063 2472.75,141.4844 Q2473.4375,142.5469 2474.7813,142.5469 Q2475.4063,142.5469 2476,142.2813 Q2476.5938,142 2477.2188,141.4219 L2477.2188,144.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="38" x="2494.75" y="142.6543">Token</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2396" x2="2599" y1="154.5" y2="154.5"/><ellipse cx="2406" cy="165.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="2415" y="168.7104">kind : ScopedEnum ::TokenKind</text><ellipse cx="2406" cy="178.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="2415" y="181.5151">column : int</text><ellipse cx="2406" cy="191.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="2415" y="194.3198">line : int</text><ellipse cx="2406" cy="203.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="2415" y="207.1245">value : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2396" x2="2599" y1="213.7188" y2="213.7188"/><!--MD5=[c814b2570e8b692cff8da2b2fec3e4d1]
class sckt.Socket--><rect codeLine="402" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="201.6563" id="sckt.Socket" style="stroke:#A80036;stroke-width:1.5;" width="298" x="1262.5" y="677"/><ellipse cx="1385.75" cy="693" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1388.7188,698.6406 Q1388.1406,698.9375 1387.5,699.0781 Q1386.8594,699.2344 1386.1563,699.2344 Q1383.6563,699.2344 1382.3281,697.5938 Q1381.0156,695.9375 1381.0156,692.8125 Q1381.0156,689.6875 1382.3281,688.0313 Q1383.6563,686.375 1386.1563,686.375 Q1386.8594,686.375 1387.5,686.5313 Q1388.1563,686.6875 1388.7188,686.9844 L1388.7188,689.7031 Q1388.0938,689.125 1387.5,688.8594 Q1386.9063,688.5781 1386.2813,688.5781 Q1384.9375,688.5781 1384.25,689.6563 Q1383.5625,690.7188 1383.5625,692.8125 Q1383.5625,694.9063 1384.25,695.9844 Q1384.9375,697.0469 1386.2813,697.0469 Q1386.9063,697.0469 1387.5,696.7813 Q1388.0938,696.5 1388.7188,695.9219 L1388.7188,698.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="43" x="1406.25" y="697.1543">Socket</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1263.5" x2="1559.5" y1="709" y2="709"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1270.5" y="717"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="1282.5" y="723.2104">_fd : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1270.5" y="729.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="1282.5" y="736.0151">_addrLen : sckt::socklen_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1270.5" y="742.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="149" x="1282.5" y="748.8198">_addr : struct sockaddr_in</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1263.5" x2="1559.5" y1="755.4141" y2="755.4141"/><ellipse cx="1273.5" cy="766.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="1282.5" y="769.6245">Socket()</text><ellipse cx="1273.5" cy="779.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="1282.5" y="782.4292">~Socket()</text><ellipse cx="1273.5" cy="792.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="1282.5" y="795.2339">getAddrLen() : addrLen_type {query}</text><ellipse cx="1273.5" cy="804.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1282.5" y="808.0386">getAddr() : addr_type {query}</text><ellipse cx="1273.5" cy="817.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="1282.5" y="820.8433">setFd(int domain, int type) : bool</text><ellipse cx="1273.5" cy="830.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="1282.5" y="833.6479">getFd() : fd_type {query}</text><ellipse cx="1273.5" cy="843.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="1282.5" y="846.4526">setAddr(int domain, int interface, int port) : void</text><ellipse cx="1273.5" cy="856.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="1282.5" y="859.2573">setAddr(struct sockaddr_in addr) : void</text><ellipse cx="1273.5" cy="868.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="1282.5" y="872.062">setFd(int fd) : void</text><!--MD5=[7b8ee10810d76e60b4e35294a2da36fd]
class AHttpMessage--><rect codeLine="8" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="188.8516" id="AHttpMessage" style="stroke:#A80036;stroke-width:1.5;" width="327" x="222" y="371"/><ellipse cx="335.75" cy="387" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M338.7188,392.6406 Q338.1406,392.9375 337.5,393.0781 Q336.8594,393.2344 336.1563,393.2344 Q333.6563,393.2344 332.3281,391.5938 Q331.0156,389.9375 331.0156,386.8125 Q331.0156,383.6875 332.3281,382.0313 Q333.6563,380.375 336.1563,380.375 Q336.8594,380.375 337.5,380.5313 Q338.1563,380.6875 338.7188,380.9844 L338.7188,383.7031 Q338.0938,383.125 337.5,382.8594 Q336.9063,382.5781 336.2813,382.5781 Q334.9375,382.5781 334.25,383.6563 Q333.5625,384.7188 333.5625,386.8125 Q333.5625,388.9063 334.25,389.9844 Q334.9375,391.0469 336.2813,391.0469 Q336.9063,391.0469 337.5,390.7813 Q338.0938,390.5 338.7188,389.9219 L338.7188,392.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="91" x="356.25" y="391.1543">AHttpMessage</text><line style="stroke:#A80036;stroke-width:1.5;" x1="223" x2="548" y1="403" y2="403"/><polygon fill="none" points="233,409,237,413,233,417,229,413" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="242" y="417.2104">_headers : map_type</text><polygon fill="none" points="233,421.8047,237,425.8047,233,429.8047,229,425.8047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="242" y="430.0151">_content : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="223" x2="548" y1="436.6094" y2="436.6094"/><ellipse cx="233" cy="447.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="242" y="450.8198">AHttpMessage()</text><ellipse cx="233" cy="460.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="242" y="463.6245">~AHttpMessage()</text><ellipse cx="233" cy="473.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="242" y="476.4292">getHeaders() : map_type</text><ellipse cx="233" cy="486.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="242" y="489.2339">getContentLength() : size_t</text><ellipse cx="233" cy="498.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="242" y="502.0386">getContent() : std::string</text><ellipse cx="233" cy="511.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="242" y="514.8433">getHeader(std::string name) : std::string</text><ellipse cx="233" cy="524.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="242" y="527.6479">addHeader(std::string name, std::string value) : void</text><ellipse cx="233" cy="537.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="242" y="540.4526">readContent(std::istream is) : void</text><ellipse cx="233" cy="550.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="242" y="553.2573">setContent(std::string content) : void</text><!--MD5=[4da09b18006e212e9efdc897e83005a4]
class HttpRequest--><rect codeLine="23" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="214.4609" id="HttpRequest" style="stroke:#A80036;stroke-width:1.5;" width="305" x="321" y="671"/><ellipse cx="429.75" cy="687" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M432.7188,692.6406 Q432.1406,692.9375 431.5,693.0781 Q430.8594,693.2344 430.1563,693.2344 Q427.6563,693.2344 426.3281,691.5938 Q425.0156,689.9375 425.0156,686.8125 Q425.0156,683.6875 426.3281,682.0313 Q427.6563,680.375 430.1563,680.375 Q430.8594,680.375 431.5,680.5313 Q432.1563,680.6875 432.7188,680.9844 L432.7188,683.7031 Q432.0938,683.125 431.5,682.8594 Q430.9063,682.5781 430.2813,682.5781 Q428.9375,682.5781 428.25,683.6563 Q427.5625,684.7188 427.5625,686.8125 Q427.5625,688.9063 428.25,689.9844 Q428.9375,691.0469 430.2813,691.0469 Q430.9063,691.0469 431.5,690.7813 Q432.0938,690.5 432.7188,689.9219 L432.7188,692.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="79" x="450.25" y="691.1543">HttpRequest</text><line style="stroke:#A80036;stroke-width:1.5;" x1="322" x2="625" y1="703" y2="703"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="329" y="711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="341" y="717.2104">_uri : Uri</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="329" y="723.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="341" y="730.0151">_method : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="329" y="736.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="341" y="742.8198">_version : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="322" x2="625" y1="749.4141" y2="749.4141"/><ellipse cx="332" cy="760.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="341" y="763.6245">HttpRequest()</text><ellipse cx="332" cy="773.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="86" x="341" y="776.4292">~HttpRequest()</text><ellipse cx="332" cy="786.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="279" x="341" y="789.2339">create(std::istream&amp; inputStream) : HttpRequest</text><ellipse cx="332" cy="798.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="80" x="341" y="802.0386">getUri() : Uri&amp;</text><ellipse cx="332" cy="811.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="341" y="814.8433">toString() : std::string</text><ellipse cx="332" cy="824.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="341" y="827.6479">getMethod() : std::string&amp;</text><ellipse cx="332" cy="837.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="341" y="840.4526">setMethod(std::string method) : void</text><ellipse cx="332" cy="850.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="341" y="853.2573">setUri(const Uri&amp; uri) : void</text><ellipse cx="332" cy="862.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="341" y="866.062">setVersion(std::string version) : void</text><ellipse cx="332" cy="875.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="341" y="878.8667">write(std::ostream os) : void</text><!--MD5=[8209a440f783abc22af203f8410078b7]
class HttpResponse--><rect codeLine="40" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="188.8516" id="HttpResponse" style="stroke:#A80036;stroke-width:1.5;" width="279" x="7" y="683.5"/><ellipse cx="97.75" cy="699.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M100.7188,705.1406 Q100.1406,705.4375 99.5,705.5781 Q98.8594,705.7344 98.1563,705.7344 Q95.6563,705.7344 94.3281,704.0938 Q93.0156,702.4375 93.0156,699.3125 Q93.0156,696.1875 94.3281,694.5313 Q95.6563,692.875 98.1563,692.875 Q98.8594,692.875 99.5,693.0313 Q100.1563,693.1875 100.7188,693.4844 L100.7188,696.2031 Q100.0938,695.625 99.5,695.3594 Q98.9063,695.0781 98.2813,695.0781 Q96.9375,695.0781 96.25,696.1563 Q95.5625,697.2188 95.5625,699.3125 Q95.5625,701.4063 96.25,702.4844 Q96.9375,703.5469 98.2813,703.5469 Q98.9063,703.5469 99.5,703.2813 Q100.0938,703 100.7188,702.4219 L100.7188,705.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="89" x="118.25" y="703.6543">HttpResponse</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="285" y1="715.5" y2="715.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="723.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="27" y="729.7104">_status : HttpStatus</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="285" y1="736.3047" y2="736.3047"/><ellipse cx="18" cy="747.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="27" y="750.5151">HttpResponse()</text><ellipse cx="18" cy="760.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="27" y="763.3198">~HttpResponse()</text><ellipse cx="18" cy="772.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="27" y="776.1245">getStatus() : int</text><ellipse cx="18" cy="785.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="27" y="788.9292">getStatusMessage(int code) : std::string</text><ellipse cx="18" cy="798.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="27" y="801.7339">toString() : std::string</text><ellipse cx="18" cy="811.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="814.5386">read(std::istream is) : void</text><ellipse cx="18" cy="824.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="827.3433">sendError(int code, std::ofstream out) : void</text><ellipse cx="18" cy="836.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="27" y="840.1479">setContentLength(int contentLength) : void</text><ellipse cx="18" cy="849.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="852.9526">setStatus(int code) : void</text><ellipse cx="18" cy="862.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="27" y="865.7573">write(std::ostream os) : void</text><!--MD5=[c44987c012b320dadbb07a5af3d158a1]
class HttpStatus--><rect codeLine="55" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="201.6563" id="HttpStatus" style="stroke:#A80036;stroke-width:1.5;" width="269" x="12" y="1201"/><ellipse cx="108.25" cy="1217" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M111.2188,1222.6406 Q110.6406,1222.9375 110,1223.0781 Q109.3594,1223.2344 108.6563,1223.2344 Q106.1563,1223.2344 104.8281,1221.5938 Q103.5156,1219.9375 103.5156,1216.8125 Q103.5156,1213.6875 104.8281,1212.0313 Q106.1563,1210.375 108.6563,1210.375 Q109.3594,1210.375 110,1210.5313 Q110.6563,1210.6875 111.2188,1210.9844 L111.2188,1213.7031 Q110.5938,1213.125 110,1212.8594 Q109.4063,1212.5781 108.7813,1212.5781 Q107.4375,1212.5781 106.75,1213.6563 Q106.0625,1214.7188 106.0625,1216.8125 Q106.0625,1218.9063 106.75,1219.9844 Q107.4375,1221.0469 108.7813,1221.0469 Q109.4063,1221.0469 110,1220.7813 Q110.5938,1220.5 111.2188,1219.9219 L111.2188,1222.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="68" x="128.75" y="1221.1543">HttpStatus</text><line style="stroke:#A80036;stroke-width:1.5;" x1="13" x2="280" y1="1233" y2="1233"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="20" y="1241"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="32" y="1247.2104">_value : int</text><line style="stroke:#A80036;stroke-width:1.5;" x1="13" x2="280" y1="1253.8047" y2="1253.8047"/><ellipse cx="23" cy="1264.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="32" y="1268.0151">HttpStatus()</text><ellipse cx="23" cy="1277.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="32" y="1280.8198">~HttpStatus()</text><ellipse cx="23" cy="1290.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="32" y="1293.6245">isClientError(int code) : bool</text><ellipse cx="23" cy="1303.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="32" y="1306.4292">isError(int code) : bool</text><ellipse cx="23" cy="1316.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="32" y="1319.2339">isInformational(int code) : bool</text><ellipse cx="23" cy="1328.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="32" y="1332.0386">isRedirection(int code) : bool</text><ellipse cx="23" cy="1341.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="32" y="1344.8433">isServerError(int code) : bool</text><ellipse cx="23" cy="1354.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="32" y="1357.6479">isSuccessful(int code) : bool</text><ellipse cx="23" cy="1367.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="32" y="1370.4526">getValue() : int {query}</text><ellipse cx="23" cy="1380.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="32" y="1383.2573">getMessage(int code) : std::string {query}</text><ellipse cx="23" cy="1392.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="32" y="1396.062">setValue(int code) : void</text><!--MD5=[c60af77fe5573b84a4aa4bce89659574]
class Server--><rect codeLine="71" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="252.875" id="Server" style="stroke:#A80036;stroke-width:1.5;" width="342" x="1289.5" y="339"/><ellipse cx="1436.25" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1439.2188,360.6406 Q1438.6406,360.9375 1438,361.0781 Q1437.3594,361.2344 1436.6563,361.2344 Q1434.1563,361.2344 1432.8281,359.5938 Q1431.5156,357.9375 1431.5156,354.8125 Q1431.5156,351.6875 1432.8281,350.0313 Q1434.1563,348.375 1436.6563,348.375 Q1437.3594,348.375 1438,348.5313 Q1438.6563,348.6875 1439.2188,348.9844 L1439.2188,351.7031 Q1438.5938,351.125 1438,350.8594 Q1437.4063,350.5781 1436.7813,350.5781 Q1435.4375,350.5781 1434.75,351.6563 Q1434.0625,352.7188 1434.0625,354.8125 Q1434.0625,356.9063 1434.75,357.9844 Q1435.4375,359.0469 1436.7813,359.0469 Q1437.4063,359.0469 1438,358.7813 Q1438.5938,358.5 1439.2188,357.9219 L1439.2188,360.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="1456.75" y="359.1543">Server</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1290.5" x2="1630.5" y1="371" y2="371"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1297.5" y="379"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="1309.5" y="385.2104">_clients : clients_type</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1297.5" y="391.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="1309.5" y="398.0151">_port : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1297.5" y="404.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="1309.5" y="410.8198">_socket : sckt::Socket</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1297.5" y="417.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="1309.5" y="423.6245">_pfd : struct pollfd</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1290.5" x2="1630.5" y1="430.2188" y2="430.2188"/><ellipse cx="1300.5" cy="441.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1309.5" y="444.4292">Server(int port)</text><ellipse cx="1300.5" cy="454.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="1309.5" y="457.2339">Server(const Server&amp; s)</text><ellipse cx="1300.5" cy="466.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="1309.5" y="470.0386">~Server()</text><ellipse cx="1300.5" cy="479.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="1309.5" y="482.8433">operator=(const Server&amp; s) : Server&amp;</text><ellipse cx="1300.5" cy="492.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1309.5" y="495.6479">getReq(sckt::fd_type fd) : bool</text><ellipse cx="1300.5" cy="505.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="1309.5" y="508.4526">getRequest(sckt::fd_type fd, std::string* request) : bool</text><ellipse cx="1300.5" cy="518.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="1309.5" y="521.2573">start() : bool</text><ellipse cx="1300.5" cy="530.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="1309.5" y="534.062">connectClient() : void</text><ellipse cx="1300.5" cy="543.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="1309.5" y="546.8667">disconnectClient(clients_type::iterator client) : void</text><ellipse cx="1300.5" cy="556.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="1309.5" y="559.6714">manageClient(clients_type::iterator client) : void</text><ellipse cx="1300.5" cy="569.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="1309.5" y="572.4761">stop() : void</text><ellipse cx="1300.5" cy="582.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="1309.5" y="585.2808">update() : void</text><!--MD5=[9cb2d3f67e2a29a05f7271ee0ae3aa70]
class ServerConfig--><rect codeLine="91" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="163.2422" id="ServerConfig" style="stroke:#A80036;stroke-width:1.5;" width="311" x="707" y="90.5"/><ellipse cx="818.75" cy="106.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M821.7188,112.1406 Q821.1406,112.4375 820.5,112.5781 Q819.8594,112.7344 819.1563,112.7344 Q816.6563,112.7344 815.3281,111.0938 Q814.0156,109.4375 814.0156,106.3125 Q814.0156,103.1875 815.3281,101.5313 Q816.6563,99.875 819.1563,99.875 Q819.8594,99.875 820.5,100.0313 Q821.1563,100.1875 821.7188,100.4844 L821.7188,103.2031 Q821.0938,102.625 820.5,102.3594 Q819.9063,102.0781 819.2813,102.0781 Q817.9375,102.0781 817.25,103.1563 Q816.5625,104.2188 816.5625,106.3125 Q816.5625,108.4063 817.25,109.4844 Q817.9375,110.5469 819.2813,110.5469 Q819.9063,110.5469 820.5,110.2813 Q821.0938,110 821.7188,109.4219 L821.7188,112.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="79" x="839.25" y="110.6543">ServerConfig</text><line style="stroke:#A80036;stroke-width:1.5;" x1="708" x2="1017" y1="122.5" y2="122.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="715" y="130.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="727" y="136.7104">_singleton : static ServerConfig*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="715" y="143.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="727" y="149.5151">_filepath : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="715" y="156.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="727" y="162.3198">_servers : std::vector&lt;ServerBlock&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="708" x2="1017" y1="168.9141" y2="168.9141"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="715" y="176.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="232" x="727" y="183.1245">ServerConfig(const std::string&amp; filepath)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="715" y="189.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="727" y="195.9292">ServerConfig(ServerConfig &amp;)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="715" y="202.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="727" y="208.7339">operator=(const ServerConfig &amp;) : ServerConfig&amp;</text><ellipse cx="718" cy="218.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="271" x="727" y="221.5386">getInstance(std::string filepath) : ServerConfig*</text><ellipse cx="718" cy="231.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="727" y="234.3433">getFilepath() : std::string {query}</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="715" y="240.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="727" y="247.1479">_parse(std::istream &amp;) : void</text><!--MD5=[c28606f55bc2b80d7d22aade593501c4]
class ServerHandler--><rect codeLine="104" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="99.2188" id="ServerHandler" style="stroke:#A80036;stroke-width:1.5;" width="243" x="1339" y="122.5"/><ellipse cx="1411.75" cy="138.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1414.7188,144.1406 Q1414.1406,144.4375 1413.5,144.5781 Q1412.8594,144.7344 1412.1563,144.7344 Q1409.6563,144.7344 1408.3281,143.0938 Q1407.0156,141.4375 1407.0156,138.3125 Q1407.0156,135.1875 1408.3281,133.5313 Q1409.6563,131.875 1412.1563,131.875 Q1412.8594,131.875 1413.5,132.0313 Q1414.1563,132.1875 1414.7188,132.4844 L1414.7188,135.2031 Q1414.0938,134.625 1413.5,134.3594 Q1412.9063,134.0781 1412.2813,134.0781 Q1410.9375,134.0781 1410.25,135.1563 Q1409.5625,136.2188 1409.5625,138.3125 Q1409.5625,140.4063 1410.25,141.4844 Q1410.9375,142.5469 1412.2813,142.5469 Q1412.9063,142.5469 1413.5,142.2813 Q1414.0938,142 1414.7188,141.4219 L1414.7188,144.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="89" x="1432.25" y="142.6543">ServerHandler</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1340" x2="1581" y1="154.5" y2="154.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1347" y="162.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1359" y="168.7104">_servers : std::vector&lt;Server&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1340" x2="1581" y1="175.3047" y2="175.3047"/><ellipse cx="1350" cy="186.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="1359" y="189.5151">ServerHandler(std::vector&lt;int&gt; ports)</text><ellipse cx="1350" cy="199.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1359" y="202.3198">~ServerHandler()</text><ellipse cx="1350" cy="211.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1359" y="215.1245">run() : void</text><!--MD5=[54966a871ed9594cfed77a625bb7d0e7]
class Uri--><rect codeLine="112" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="713.8438" id="Uri" style="stroke:#A80036;stroke-width:1.5;" width="826" x="477.5" y="945"/><ellipse cx="877.75" cy="961" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M880.7188,966.6406 Q880.1406,966.9375 879.5,967.0781 Q878.8594,967.2344 878.1563,967.2344 Q875.6563,967.2344 874.3281,965.5938 Q873.0156,963.9375 873.0156,960.8125 Q873.0156,957.6875 874.3281,956.0313 Q875.6563,954.375 878.1563,954.375 Q878.8594,954.375 879.5,954.5313 Q880.1563,954.6875 880.7188,954.9844 L880.7188,957.7031 Q880.0938,957.125 879.5,956.8594 Q878.9063,956.5781 878.2813,956.5781 Q876.9375,956.5781 876.25,957.6563 Q875.5625,958.7188 875.5625,960.8125 Q875.5625,962.9063 876.25,963.9844 Q876.9375,965.0469 878.2813,965.0469 Q878.9063,965.0469 879.5,964.7813 Q880.0938,964.5 880.7188,963.9219 L880.7188,966.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="17" x="898.25" y="965.1543">Uri</text><line style="stroke:#A80036;stroke-width:1.5;" x1="478.5" x2="1302.5" y1="977" y2="977"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="985"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="497.5" y="991.2104">_fragment : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="997.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="497.5" y="1004.0151">_host : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1010.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="497.5" y="1016.8198">_path : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1023.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="497.5" y="1029.6245">_query : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1036.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="497.5" y="1042.4292">_scheme : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1049.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="497.5" y="1055.2339">_userInfo : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1061.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="497.5" y="1068.0386">_port : u_short</text><line style="stroke:#A80036;stroke-width:1.5;" x1="478.5" x2="1302.5" y1="1074.6328" y2="1074.6328"/><ellipse cx="488.5" cy="1085.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="497.5" y="1088.8433">Uri()</text><ellipse cx="488.5" cy="1098.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="497.5" y="1101.6479">Uri(const std::string&amp; uri)</text><ellipse cx="488.5" cy="1111.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="497.5" y="1114.4526">Uri(const std::string&amp; scheme, const std::string&amp; pathEtc)</text><ellipse cx="488.5" cy="1124.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="501" x="497.5" y="1127.2573">Uri(const std::string&amp; scheme, const std::string&amp; authority, const std::string&amp; pathEtc)</text><ellipse cx="488.5" cy="1136.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="632" x="497.5" y="1140.062">Uri(const std::string&amp; scheme, const std::string&amp; authority, const std::string&amp; path, const std::string&amp; query)</text><ellipse cx="488.5" cy="1149.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="800" x="497.5" y="1152.8667">Uri(const std::string&amp; scheme, const std::string&amp; authority, const std::string&amp; path, const std::string&amp; query, const std::string&amp; fragment)</text><ellipse cx="488.5" cy="1162.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="54" x="497.5" y="1165.6714">Uri(Uri &amp;)</text><ellipse cx="488.5" cy="1175.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="497.5" y="1178.4761">~Uri()</text><ellipse cx="488.5" cy="1188.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="497.5" y="1191.2808">operator=(const Uri &amp;) : Uri&amp;</text><ellipse cx="488.5" cy="1200.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="497.5" y="1204.0854">operator=(const std::string&amp; uri) : Uri&amp;</text><ellipse cx="488.5" cy="1213.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="497.5" y="1216.8901">empty() : bool {query}</text><ellipse cx="488.5" cy="1226.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="497.5" y="1229.6948">isRelative() : bool {query}</text><ellipse cx="488.5" cy="1239.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="186" x="497.5" y="1242.4995">isWellKnownPort() : bool {query}</text><ellipse cx="488.5" cy="1252.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="497.5" y="1255.3042">decode(std::string s) : std::string {query}</text><ellipse cx="488.5" cy="1264.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="497.5" y="1268.1089">getAuthority() : std::string {query}</text><ellipse cx="488.5" cy="1277.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="497.5" y="1280.9136">getFragment() : std::string</text><ellipse cx="488.5" cy="1290.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="497.5" y="1293.7183">getHost() : std::string</text><ellipse cx="488.5" cy="1303.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="497.5" y="1306.5229">getPath() : std::string</text><ellipse cx="488.5" cy="1316.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="497.5" y="1319.3276">getPathAndQuery() : std::string {query}</text><ellipse cx="488.5" cy="1328.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="189" x="497.5" y="1332.1323">getPathEtc() : std::string {query}</text><ellipse cx="488.5" cy="1341.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="497.5" y="1344.937">getQuery() : std::string {query}</text><ellipse cx="488.5" cy="1354.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="497.5" y="1357.7417">getRawQuery() : std::string</text><ellipse cx="488.5" cy="1367.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="497.5" y="1370.5464">getScheme() : std::string</text><ellipse cx="488.5" cy="1380.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="497.5" y="1383.3511">getUserInfo() : std::string</text><ellipse cx="488.5" cy="1392.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="497.5" y="1396.1558">toString() : std::string</text><ellipse cx="488.5" cy="1405.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="497.5" y="1408.9604">getPort() : u_short {query}</text><ellipse cx="488.5" cy="1418.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="497.5" y="1421.7651">getSpecifiedPort() : u_short</text><ellipse cx="488.5" cy="1431.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="497.5" y="1434.5698">getWellKnownPort() : u_short {query}</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1441.1641"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="497.5" y="1447.3745">_lowerStringInPlace(std::string&amp; s) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1453.9688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="523" x="497.5" y="1460.1792">_parseAuthority(std::string::const_iterator&amp; it, const std::string::const_iterator&amp; end) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1466.7734"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="543" x="497.5" y="1472.9839">_parseHostAndPort(std::string::const_iterator&amp; it, const std::string::const_iterator&amp; end) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1479.5781"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="515" x="497.5" y="1485.7886">_parsePathEtc(std::string::const_iterator&amp; it, const std::string::const_iterator&amp; end) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="485.5" y="1492.3828"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="221" x="497.5" y="1498.5933">_parseUri(const std::string&amp; uri) : void</text><ellipse cx="488.5" cy="1508.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="497.5" y="1511.3979">clear() : void</text><ellipse cx="488.5" cy="1520.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="497.5" y="1524.2026">setAuthority(const std::string &amp;) : void</text><ellipse cx="488.5" cy="1533.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="497.5" y="1537.0073">setFragment(const std::string &amp;) : void</text><ellipse cx="488.5" cy="1546.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="497.5" y="1549.812">setHost(const std::string &amp;) : void</text><ellipse cx="488.5" cy="1559.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="497.5" y="1562.6167">setPath(const std::string &amp;) : void</text><ellipse cx="488.5" cy="1572.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="497.5" y="1575.4214">setPathEtc(const std::string &amp;) : void</text><ellipse cx="488.5" cy="1585.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="497.5" y="1588.2261">setPort(u_short) : void</text><ellipse cx="488.5" cy="1597.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="497.5" y="1601.0308">setQuery(const std::string &amp;) : void</text><ellipse cx="488.5" cy="1610.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="497.5" y="1613.8354">setRawQuery(const std::string &amp;) : void</text><ellipse cx="488.5" cy="1623.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="497.5" y="1626.6401">setScheme(const std::string &amp;) : void</text><ellipse cx="488.5" cy="1636.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="497.5" y="1639.4448">setSpecifiedPort(u_short) : void</text><ellipse cx="488.5" cy="1649.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="497.5" y="1652.2495">setUserInfo(const std::string &amp;) : void</text><!--MD5=[bf80aca272b4dbb7277da3ce6255b748]
class Uri::SyntaxError--><rect codeLine="168" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="60.8047" id="Uri::SyntaxError" style="stroke:#A80036;stroke-width:1.5;" width="129" x="826" y="2096.5"/><ellipse cx="841" cy="2112.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M843.9688,2118.1406 Q843.3906,2118.4375 842.75,2118.5781 Q842.1094,2118.7344 841.4063,2118.7344 Q838.9063,2118.7344 837.5781,2117.0938 Q836.2656,2115.4375 836.2656,2112.3125 Q836.2656,2109.1875 837.5781,2107.5313 Q838.9063,2105.875 841.4063,2105.875 Q842.1094,2105.875 842.75,2106.0313 Q843.4063,2106.1875 843.9688,2106.4844 L843.9688,2109.2031 Q843.3438,2108.625 842.75,2108.3594 Q842.1563,2108.0781 841.5313,2108.0781 Q840.1875,2108.0781 839.5,2109.1563 Q838.8125,2110.2188 838.8125,2112.3125 Q838.8125,2114.4063 839.5,2115.4844 Q840.1875,2116.5469 841.5313,2116.5469 Q842.1563,2116.5469 842.75,2116.2813 Q843.3438,2116 843.9688,2115.4219 L843.9688,2118.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="97" x="855" y="2116.6543">Uri::SyntaxError</text><line style="stroke:#A80036;stroke-width:1.5;" x1="827" x2="954" y1="2128.5" y2="2128.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="827" x2="954" y1="2136.5" y2="2136.5"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="834" y="2144.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="846" y="2150.7104">what() : char*</text><!--MD5=[b4007758ef3c7970e509fc4032ff4a77]
class HttpStatus::Code--><rect codeLine="173" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="816.2813" id="HttpStatus::Code" style="stroke:#A80036;stroke-width:1.5;" width="188" x="52.5" y="1719"/><ellipse cx="89.1" cy="1735" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M93.2094,1741 L85.4906,1741 L85.4906,1728.6094 L93.2094,1728.6094 L93.2094,1730.7656 L87.9438,1730.7656 L87.9438,1733.4375 L92.7094,1733.4375 L92.7094,1735.5938 L87.9438,1735.5938 L87.9438,1738.8438 L93.2094,1738.8438 L93.2094,1741 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="107.9" y="1739.1543">HttpStatus::Code</text><line style="stroke:#A80036;stroke-width:1.5;" x1="53.5" x2="239.5" y1="1751" y2="1751"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="51" x="58.5" y="1765.2104">Accepted</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="58.5" y="1778.0151">AlreadyReported</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="58.5" y="1790.8198">BadGateway</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="58.5" y="1803.6245">BadRequest</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="58.5" y="1816.4292">Conflict</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="58.5" y="1829.2339">Continue</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="45" x="58.5" y="1842.0386">Created</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="57" x="58.5" y="1854.8433">EarlyHints</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="58.5" y="1867.6479">ExpectationFailed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="58.5" y="1880.4526">FailedDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="58.5" y="1893.2573">Forbidden</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="34" x="58.5" y="1906.062">Found</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="58.5" y="1918.8667">GatewayTimeout</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="30" x="58.5" y="1931.6714">Gone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="58.5" y="1944.4761">HTTPVersionNotSupported</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="41" x="58.5" y="1957.2808">IMUsed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="58.5" y="1970.0854">ImATeapot</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="58.5" y="1982.8901">InsufficientStorage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="58.5" y="1995.6948">InternalServerError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="58.5" y="2008.4995">LengthRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="39" x="58.5" y="2021.3042">Locked</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="58.5" y="2034.1089">LoopDetected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="58.5" y="2046.9136">MethodNotAllowed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="58.5" y="2059.7183">MovedPermanently</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="58.5" y="2072.5229">MultiStatus</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="58.5" y="2085.3276">MultipleChoices</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="58.5" y="2098.1323">NetworkAuthenticationRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="59" x="58.5" y="2110.937">NoContent</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="58.5" y="2123.7417">NonAuthoritativeInformation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="80" x="58.5" y="2136.5464">NotAcceptable</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="58.5" y="2149.3511">NotExtended</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="58.5" y="2162.1558">NotFound</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="58.5" y="2174.9604">NotImplemented</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="58.5" y="2187.7651">NotModified</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="16" x="58.5" y="2200.5698">OK</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="80" x="58.5" y="2213.3745">PartialContent</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="58.5" y="2226.1792">PayloadTooLarge</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="58.5" y="2238.9839">PaymentRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="58.5" y="2251.7886">PermanentRedirect</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="58.5" y="2264.5933">PreconditionFailed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="58.5" y="2277.3979">PreconditionRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="58.5" y="2290.2026">Processing</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="58.5" y="2303.0073">ProxyAuthenticationRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="58.5" y="2315.812">RangeNotSatisfiable</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="58.5" y="2328.6167">RequestHeaderFieldsTooLarge</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="58.5" y="2341.4214">RequestTimeout</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="76" x="58.5" y="2354.2261">ResetContent</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="54" x="58.5" y="2367.0308">SeeOther</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="58.5" y="2379.8354">ServiceUnavailable</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="58.5" y="2392.6401">SwitchingProtocols</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="58.5" y="2405.4448">TemporaryRedirect</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="58.5" y="2418.2495">TooManyRequests</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="58.5" y="2431.0542">URITooLong</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="74" x="58.5" y="2443.8589">Unauthorized</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="58.5" y="2456.6636">UnavailableForLegalReasons</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="58.5" y="2469.4683">UnprocessableEntity</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="58.5" y="2482.2729">UnsupportedMediaType</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="58.5" y="2495.0776">UpgradeRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="58.5" y="2507.8823">UseProxy</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="58.5" y="2520.687">VariantAlsoNegotiates</text><line style="stroke:#A80036;stroke-width:1.5;" x1="53.5" x2="239.5" y1="2527.2813" y2="2527.2813"/><!--MD5=[bfc2e2142744fd249a16e64d084d8219]
class ServerConfig::ServerBlock--><rect codeLine="237" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="112.0234" id="ServerConfig::ServerBlock" style="stroke:#A80036;stroke-width:1.5;" width="253" x="736" y="409.5"/><ellipse cx="778.45" cy="425.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M781.4188,431.1406 Q780.8406,431.4375 780.2,431.5781 Q779.5594,431.7344 778.8563,431.7344 Q776.3563,431.7344 775.0281,430.0938 Q773.7156,428.4375 773.7156,425.3125 Q773.7156,422.1875 775.0281,420.5313 Q776.3563,418.875 778.8563,418.875 Q779.5594,418.875 780.2,419.0313 Q780.8563,419.1875 781.4188,419.4844 L781.4188,422.2031 Q780.7938,421.625 780.2,421.3594 Q779.6063,421.0781 778.9813,421.0781 Q777.6375,421.0781 776.95,422.1563 Q776.2625,423.2188 776.2625,425.3125 Q776.2625,427.4063 776.95,428.4844 Q777.6375,429.5469 778.9813,429.5469 Q779.6063,429.5469 780.2,429.2813 Q780.7938,429 781.4188,428.4219 L781.4188,431.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="160" x="798.55" y="429.6543">ServerConfig::ServerBlock</text><line style="stroke:#A80036;stroke-width:1.5;" x1="737" x2="988" y1="441.5" y2="441.5"/><ellipse cx="747" cy="452.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="756" y="455.7104">errors : std::map&lt;u_short, std::string&gt;</text><ellipse cx="747" cy="465.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="756" y="468.5151">root : std::string</text><ellipse cx="747" cy="478.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="756" y="481.3198">serverName : std::string</text><ellipse cx="747" cy="490.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="756" y="494.1245">listens : std::vector&lt;Host&gt;</text><ellipse cx="747" cy="503.7188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="756" y="506.9292">indexes : std::vector&lt;std::string&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="737" x2="988" y1="513.5234" y2="513.5234"/><!--MD5=[4e6671cf4b9c56ef0e1cebff1148754e]
class ServerConfig::ServerBlock::Host--><rect codeLine="246" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="73.6094" id="ServerConfig::ServerBlock::Host" style="stroke:#A80036;stroke-width:1.5;" width="229" x="661" y="741"/><ellipse cx="676" cy="757" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M678.9688,762.6406 Q678.3906,762.9375 677.75,763.0781 Q677.1094,763.2344 676.4063,763.2344 Q673.9063,763.2344 672.5781,761.5938 Q671.2656,759.9375 671.2656,756.8125 Q671.2656,753.6875 672.5781,752.0313 Q673.9063,750.375 676.4063,750.375 Q677.1094,750.375 677.75,750.5313 Q678.4063,750.6875 678.9688,750.9844 L678.9688,753.7031 Q678.3438,753.125 677.75,752.8594 Q677.1563,752.5781 676.5313,752.5781 Q675.1875,752.5781 674.5,753.6563 Q673.8125,754.7188 673.8125,756.8125 Q673.8125,758.9063 674.5,759.9844 Q675.1875,761.0469 676.5313,761.0469 Q677.1563,761.0469 677.75,760.7813 Q678.3438,760.5 678.9688,759.9219 L678.9688,762.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="197" x="690" y="761.1543">ServerConfig::ServerBlock::Host</text><line style="stroke:#A80036;stroke-width:1.5;" x1="662" x2="889" y1="773" y2="773"/><ellipse cx="672" cy="784" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="681" y="787.2104">port : int</text><ellipse cx="672" cy="796.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="681" y="800.0151">host : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="662" x2="889" y1="806.6094" y2="806.6094"/><!--MD5=[5d270b0c75909e4f6f51a878f0433667]
class ServerConfig::ServerBlock::Location--><rect codeLine="252" fill="#FEFECE" filter="url(#fn3gdeeh4yhap)" height="99.2188" id="ServerConfig::ServerBlock::Location" style="stroke:#A80036;stroke-width:1.5;" width="253" x="925" y="728.5"/><ellipse cx="940" cy="744.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M942.9688,750.1406 Q942.3906,750.4375 941.75,750.5781 Q941.1094,750.7344 940.4063,750.7344 Q937.9063,750.7344 936.5781,749.0938 Q935.2656,747.4375 935.2656,744.3125 Q935.2656,741.1875 936.5781,739.5313 Q937.9063,737.875 940.4063,737.875 Q941.1094,737.875 941.75,738.0313 Q942.4063,738.1875 942.9688,738.4844 L942.9688,741.2031 Q942.3438,740.625 941.75,740.3594 Q941.1563,740.0781 940.5313,740.0781 Q939.1875,740.0781 938.5,741.1563 Q937.8125,742.2188 937.8125,744.3125 Q937.8125,746.4063 938.5,747.4844 Q939.1875,748.5469 940.5313,748.5469 Q941.1563,748.5469 941.75,748.2813 Q942.3438,748 942.9688,747.4219 L942.9688,750.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="221" x="954" y="748.6543">ServerConfig::ServerBlock::Location</text><line style="stroke:#A80036;stroke-width:1.5;" x1="926" x2="1177" y1="760.5" y2="760.5"/><ellipse cx="936" cy="771.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="945" y="774.7104">fastCgiPass : Host</text><ellipse cx="936" cy="784.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="945" y="787.5151">path : Uri</text><ellipse cx="936" cy="797.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="945" y="800.3198">autoindex : bool</text><ellipse cx="936" cy="809.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="945" y="813.1245">client_max_body_size : size_t</text><line style="stroke:#A80036;stroke-width:1.5;" x1="926" x2="1177" y1="819.7188" y2="819.7188"/><!--MD5=[d532b561af1c71ac45e887977a430bed]
reverse link AHttpMessage to HttpRequest--><path codeLine="424" d="M417.48,579.33 C425.94,609.19 435.05,641.33 443.41,670.83 " fill="none" id="AHttpMessage-backto-HttpRequest" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="410.74,581.23,412.02,560.08,424.21,577.41,410.74,581.23" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0ba115b2af8542eab78f2f0efaca30c9]
reverse link AHttpMessage to HttpResponse--><path codeLine="427" d="M300.91,576.4 C274.01,611.35 244.52,649.65 218.59,683.34 " fill="none" id="AHttpMessage-backto-HttpResponse" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="295.72,571.66,313.47,560.08,306.82,580.2,295.72,571.66" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[cbfa7bb71f2f49cdaa297ecfa7a90e7f]
reverse link parser.IScanner to parser.Scanner--><path codeLine="430" d="M1780.33,257.28 C1788.4,266.95 1797.17,276.15 1806.5,284 C1834.78,307.82 1849.51,301.46 1881.5,320 C1912.23,337.8 1944.33,358.65 1973.92,378.87 " fill="none" id="parser.IScanner-backto-parser.Scanner" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1774.62,261.34,1767.86,241.26,1785.67,252.74,1774.62,261.34" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[5232b11a531143b105b080fdb7b4bd72]
reverse link parser.IScanner to parser.ScannerFD--><path codeLine="433" d="M1739,261.22 C1741.42,279.79 1744.04,299.85 1746.65,319.88 " fill="none" id="parser.IScanner-backto-parser.ScannerFD" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1732.05,262.08,1736.41,241.34,1745.94,260.27,1732.05,262.08" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[eb94f7a53a9e3ef312c4b8b8668f8222]
reverse link clnt.Client to sckt.Socket--><path codeLine="441" d="M1224.77,563.84 C1256.3,599.84 1292.09,640.69 1323.83,676.93 " fill="none" id="clnt.Client-backto-sckt.Socket" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1215.99,553.82,1216.9285,560.9698,1223.8893,562.8534,1222.9508,555.7036,1215.99,553.82" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4bbfc9482f136529f4bd99d966bcfa03]
reverse link HttpRequest to Uri--><path codeLine="444" d="M566.83,895.83 C579.2,911.32 592.37,927.8 606.03,944.91 " fill="none" id="HttpRequest-backto-Uri" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="558.39,885.26,559.0098,892.4444,565.8799,894.6356,565.2601,887.4511,558.39,885.26" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[10d1502400a05378b80e067465b1e462]
reverse link HttpResponse to HttpStatus--><path codeLine="447" d="M146.5,885.65 C146.5,977.87 146.5,1110.24 146.5,1200.59 " fill="none" id="HttpResponse-backto-HttpStatus" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="146.5,872.62,142.5,878.62,146.5,884.62,150.5,878.62,146.5,872.62" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[502289e9c63aa49a5aa1156e3b558ccc]
reverse link parser.ScannerConfig to parser.Scanner--><path codeLine="450" d="M2091.5,267.06 C2091.5,289.97 2091.5,314.85 2091.5,338.97 " fill="none" id="parser.ScannerConfig-backto-parser.Scanner" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2091.5,253.81,2087.5,259.81,2091.5,265.81,2095.5,259.81,2091.5,253.81" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[5065fd853a6edd3511cf82515e513a7a]
reverse link parser.ScannerConfig to parser.Token--><path codeLine="453" d="M2306.5,258.1 C2331.01,267.14 2355.73,275.96 2379.5,284 C2558.56,344.58 2770.77,404.01 2893.88,437.29 " fill="none" id="parser.ScannerConfig-backto-parser.Token" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2294.09,253.51,2298.3268,259.3452,2305.3427,257.6786,2301.1059,251.8434,2294.09,253.51" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="2304.3975" y="273.7775">2</text><!--MD5=[07fadc8e359723fa57d59fdf3eb26ca0]
reverse link parser.parser::http.ScannerHttpRequest to parser.Scanner--><path codeLine="456" d="M2828.34,258.96 C2808.08,267.98 2787.49,276.56 2767.5,284 C2576.52,355.05 2345.56,410.49 2209.03,440.27 " fill="none" id="parser.parser::http.ScannerHttpRequest-backto-parser.Scanner" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2840.23,253.6,2833.1159,252.4213,2829.2916,258.5348,2836.4058,259.7135,2840.23,253.6" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[caabcbac49285670e46236df7139f11f]
reverse link parser.parser::http.ScannerHttpRequest to parser.Token--><path codeLine="459" d="M2996.5,266.89 C2996.5,316.55 2996.5,375.46 2996.5,415.96 " fill="none" id="parser.parser::http.ScannerHttpRequest-backto-parser.Token" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2996.5,253.81,2992.5,259.81,2996.5,265.81,3000.5,259.81,2996.5,253.81" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="2988.1438" y="273.8262">2</text><!--MD5=[daf039fc6a9ebf0cdbaeb133eb0d7697]
reverse link Server to sckt.Socket--><path codeLine="462" d="M1438.6,605.25 C1434.81,629.32 1430.92,653.92 1427.33,676.7 " fill="none" id="Server-backto-sckt.Socket" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1440.64,592.34,1435.7586,597.6477,1438.7806,604.1951,1443.662,598.8873,1440.64,592.34" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d153c192e06ce236f3b225b065a57873]
reverse link ServerConfig to ServerConfig--><path codeLine="465" d="M1030.11,129.55 C1044.21,138.65 1053,152.8 1053,172 C1053,196.1 1039.16,212.24 1018.34,220.43 " fill="none" id="ServerConfig-backto-ServerConfig" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1018.34,123.57,1021.8807,129.852,1029.0413,128.9997,1025.5006,122.7178,1018.34,123.57" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f3ff338233d80d8dff6398aaa83380a3]
reverse link ServerConfig::ServerBlock::Location to Uri--><path codeLine="468" d="M1032.64,840.15 C1023.85,868.63 1012.63,905.02 1000.35,944.83 " fill="none" id="ServerConfig::ServerBlock::Location-backto-Uri" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1036.5,827.64,1030.9094,832.1947,1032.9636,839.1071,1038.5541,834.5523,1036.5,827.64" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[294aeb58b9b9af8ce9ee02d245ffcb4a]
reverse link ServerHandler to Server--><path codeLine="471" d="M1460.5,235.15 C1460.5,265.42 1460.5,302.94 1460.5,338.82 " fill="none" id="ServerHandler-backto-Server" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1460.5,221.79,1456.5,227.79,1460.5,233.79,1464.5,227.79,1460.5,221.79" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[ace22386cfa7970e5462bd57b9ff3b8a]
reverse link parser.Token to parser.ScopedEnum--><path codeLine="474" d="M3019.87,527.47 C3046.44,596.8 3088.48,706.5 3106.65,753.92 " fill="none" id="parser.Token-backto-parser.ScopedEnum" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3015.09,515.02,3013.4994,522.0535,3019.3801,526.2269,3020.9707,519.1935,3015.09,515.02" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="3009.2329" y="535.4554">4</text><!--MD5=[d89cf01b7450f990d9fcb21f7b42078d]
reverse link HttpStatus to HttpStatus::Code--><path codeLine="483" d="M146.5,1418.55 C146.5,1497.95 146.5,1608.57 146.5,1718.78 " fill="none" id="HttpStatus-backto-HttpStatus::Code" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="146.5" cy="1411.09" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="146.5" x2="146.5" y1="1419.09" y2="1403.09"/><line style="stroke:#A80036;stroke-width:1.0;" x1="138.5" x2="154.5" y1="1411.09" y2="1411.09"/><!--MD5=[e8f87834b82ff63b3e76367d91ca08be]
reverse link parser.ScopedEnum to parser.ScopedEnum::TokenKind--><path codeLine="486" d="M3115.5,817.36 C3115.5,901.91 3115.5,1105.84 3115.5,1220.05 " fill="none" id="parser.ScopedEnum-backto-parser.ScopedEnum::TokenKind" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="3115.5" cy="810.1" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3115.5" x2="3115.5" y1="818.1" y2="802.1"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3107.5" x2="3123.5" y1="810.1" y2="810.1"/><!--MD5=[b4802b19462d607e4d7185fbe6e49d47]
reverse link parser.ScopedEnum to parser.parser::http.ScopedEnum::TokenKind--><path codeLine="489" d="M3129.15,739.7 C3163.74,645.16 3255.57,394.18 3304.6,260.18 " fill="none" id="parser.ScopedEnum-backto-parser.parser::http.ScopedEnum::TokenKind" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="3126.6705" cy="746.4777" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3129.4209" x2="3123.92" y1="738.9654" y2="753.99"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3134.1828" x2="3119.1581" y1="749.2281" y2="743.7272"/><!--MD5=[63f7ecbd12cb551209aeb6ed06b37bce]
reverse link ServerConfig to ServerConfig::ServerBlock--><path codeLine="492" d="M862.5,268.96 C862.5,315.54 862.5,369.84 862.5,409.38 " fill="none" id="ServerConfig-backto-ServerConfig::ServerBlock" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="862.5" cy="261.81" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="862.5" x2="862.5" y1="269.81" y2="253.81"/><line style="stroke:#A80036;stroke-width:1.0;" x1="854.5" x2="870.5" y1="261.81" y2="261.81"/><!--MD5=[d6dc26cc7297095331e60a3b1b88f140]
reverse link ServerConfig::ServerBlock to ServerConfig::ServerBlock::Host--><path codeLine="495" d="M842.93,536.34 C825.16,599.78 799.64,690.83 785.65,740.78 " fill="none" id="ServerConfig::ServerBlock-backto-ServerConfig::ServerBlock::Host" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="844.8935" cy="529.3539" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="842.7371" x2="847.05" y1="537.0577" y2="521.65"/><line style="stroke:#A80036;stroke-width:1.0;" x1="837.1897" x2="852.5974" y1="527.1974" y2="531.5103"/><!--MD5=[cb11333a6fd17b3aa5d169fba20ff4b0]
reverse link ServerConfig::ServerBlock to ServerConfig::ServerBlock::Location--><path codeLine="498" d="M903.9,534.51 C939.59,593.15 990.24,676.37 1021.97,728.48 " fill="none" id="ServerConfig::ServerBlock-backto-ServerConfig::ServerBlock::Location" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="900.2296" cy="528.4836" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="904.3892" x2="896.07" y1="535.3172" y2="521.65"/><line style="stroke:#A80036;stroke-width:1.0;" x1="893.396" x2="907.0632" y1="532.6432" y2="524.324"/><!--MD5=[4da35ca2ae353d034a5dca0393961d97]
reverse link Uri to Uri::SyntaxError--><path codeLine="501" d="M890.5,1674.43 C890.5,1845.97 890.5,2026.88 890.5,2096.41 " fill="none" id="Uri-backto-Uri::SyntaxError" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="890.5" cy="1667.19" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="890.5" x2="890.5" y1="1675.19" y2="1659.19"/><line style="stroke:#A80036;stroke-width:1.0;" x1="882.5" x2="898.5" y1="1667.19" y2="1667.19"/><!--MD5=[fc2b01d5a4ef01f9ac4635ab7207a214]
@startuml





/' Objects '/

class AHttpMessage {
	+AHttpMessage()
	+~AHttpMessage()
	#_headers : map_type
	+getHeaders() : map_type
	+getContentLength() : size_t
	#_content : std::string
	+getContent() : std::string
	+getHeader(std::string name) : std::string
	+addHeader(std::string name, std::string value) : void
	+readContent(std::istream is) : void
	+setContent(std::string content) : void
}


class HttpRequest {
	+HttpRequest()
	+~HttpRequest()
	+{static} create(std::istream& inputStream) : HttpRequest
	-_uri : Uri
	+getUri() : Uri&
	-_method : std::string
	-_version : std::string
	+toString() : std::string
	+getMethod() : std::string&
	+setMethod(std::string method) : void
	+setUri(const Uri& uri) : void
	+setVersion(std::string version) : void
	+write(std::ostream os) : void
}


class HttpResponse {
	+HttpResponse()
	+~HttpResponse()
	-_status : HttpStatus
	+getStatus() : int
	+getStatusMessage(int code) : std::string
	+toString() : std::string
	+read(std::istream is) : void
	+sendError(int code, std::ofstream out) : void
	+setContentLength(int contentLength) : void
	+setStatus(int code) : void
	+write(std::ostream os) : void
}


class HttpStatus {
	+HttpStatus()
	+~HttpStatus()
	+isClientError(int code) : bool
	+isError(int code) : bool
	+isInformational(int code) : bool
	+isRedirection(int code) : bool
	+isServerError(int code) : bool
	+isSuccessful(int code) : bool
	-_value : int
	+getValue() : int {query}
	+getMessage(int code) : std::string {query}
	+setValue(int code) : void
}


class Server {
	+Server(int port)
	+Server(const Server& s)
	+~Server()
	+operator=(const Server& s) : Server&
	+getReq(sckt::fd_type fd) : bool
	+getRequest(sckt::fd_type fd, std::string* request) : bool
	+start() : bool
	-_clients : clients_type
	-_port : int
	-_socket : sckt::Socket
	-_pfd : struct pollfd
	+connectClient() : void
	+disconnectClient(clients_type::iterator client) : void
	+manageClient(clients_type::iterator client) : void
	+stop() : void
	+update() : void
}


class ServerConfig {
	-ServerConfig(const std::string& filepath)
	-ServerConfig(ServerConfig &)
	-operator=(const ServerConfig &) : ServerConfig&
	+{static} getInstance(std::string filepath) : ServerConfig*
	-{static} _singleton : static ServerConfig*
	-_filepath : std::string
	+getFilepath() : std::string {query}
	-_servers : std::vector<ServerBlock>
	-_parse(std::istream &) : void
}


class ServerHandler {
	+ServerHandler(std::vector<int> ports)
	+~ServerHandler()
	-_servers : std::vector<Server>
	+run() : void
}


class Uri {
	+Uri()
	+Uri(const std::string& uri)
	+Uri(const std::string& scheme, const std::string& pathEtc)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& pathEtc)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& path, const std::string& query)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& path, const std::string& query, const std::string& fragment)
	+Uri(Uri &)
	+~Uri()
	+operator=(const Uri &) : Uri&
	+operator=(const std::string& uri) : Uri&
	+empty() : bool {query}
	+isRelative() : bool {query}
	+isWellKnownPort() : bool {query}
	-_fragment : std::string
	-_host : std::string
	-_path : std::string
	-_query : std::string
	-_scheme : std::string
	-_userInfo : std::string
	+decode(std::string s) : std::string {query}
	+getAuthority() : std::string {query}
	+getFragment() : std::string
	+getHost() : std::string
	+getPath() : std::string
	+getPathAndQuery() : std::string {query}
	+getPathEtc() : std::string {query}
	+getQuery() : std::string {query}
	+getRawQuery() : std::string
	+getScheme() : std::string
	+getUserInfo() : std::string
	+toString() : std::string
	-_port : u_short
	+getPort() : u_short {query}
	+getSpecifiedPort() : u_short
	+getWellKnownPort() : u_short {query}
	-_lowerStringInPlace(std::string& s) : void
	-_parseAuthority(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parseHostAndPort(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parsePathEtc(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parseUri(const std::string& uri) : void
	+clear() : void
	+setAuthority(const std::string &) : void
	+setFragment(const std::string &) : void
	+setHost(const std::string &) : void
	+setPath(const std::string &) : void
	+setPathEtc(const std::string &) : void
	+setPort(u_short) : void
	+setQuery(const std::string &) : void
	+setRawQuery(const std::string &) : void
	+setScheme(const std::string &) : void
	+setSpecifiedPort(u_short) : void
	+setUserInfo(const std::string &) : void
}


class Uri::SyntaxError {
	-what() : char*
}


enum HttpStatus::Code {
	Accepted
	AlreadyReported
	BadGateway
	BadRequest
	Conflict
	Continue
	Created
	EarlyHints
	ExpectationFailed
	FailedDependency
	Forbidden
	Found
	GatewayTimeout
	Gone
	HTTPVersionNotSupported
	IMUsed
	ImATeapot
	InsufficientStorage
	InternalServerError
	LengthRequired
	Locked
	LoopDetected
	MethodNotAllowed
	MovedPermanently
	MultiStatus
	MultipleChoices
	NetworkAuthenticationRequired
	NoContent
	NonAuthoritativeInformation
	NotAcceptable
	NotExtended
	NotFound
	NotImplemented
	NotModified
	OK
	PartialContent
	PayloadTooLarge
	PaymentRequired
	PermanentRedirect
	PreconditionFailed
	PreconditionRequired
	Processing
	ProxyAuthenticationRequired
	RangeNotSatisfiable
	RequestHeaderFieldsTooLarge
	RequestTimeout
	ResetContent
	SeeOther
	ServiceUnavailable
	SwitchingProtocols
	TemporaryRedirect
	TooManyRequests
	URITooLong
	Unauthorized
	UnavailableForLegalReasons
	UnprocessableEntity
	UnsupportedMediaType
	UpgradeRequired
	UseProxy
	VariantAlsoNegotiates
}


class ServerConfig::ServerBlock {
	+errors : std::map<u_short, std::string>
	+root : std::string
	+serverName : std::string
	+listens : std::vector<Host>
	+indexes : std::vector<std::string>
}


class ServerConfig::ServerBlock::Host {
	+port : int
	+host : std::string
}


class ServerConfig::ServerBlock::Location {
	+fastCgiPass : Host
	+path : Uri
	+autoindex : bool
	+client_max_body_size : size_t
}


namespace clnt {
	class Client {
		+Client()
		+~Client()
		-_socket : sckt::Socket
		+getAddr() : sckt::addr_type {query}
		+getFd() : sckt::fd_type {query}
		-_pfd : struct pollfd
		+getPfd() : struct pollfd {query}
		+setAddr(sckt::addr_type addr) : void
		+setFd(sckt::fd_type fd) : void
		+setPfd() : void
	}
}


namespace parser {
	abstract class IScanner {
		+~IScanner()
		+{abstract} eof() : bool
		+{abstract} get() : char
		+{abstract} peek() : char
		+{abstract} unget() : char
		+{abstract} getColumn() : int
		+{abstract} getLine() : int
	}

	class Scanner {
		-Scanner()
		+Scanner(std::istream& inputStream)
		+~Scanner()
		+eof() : bool
		-_c : char
		+get() : char
		+peek() : char
		+unget() : char
		-_column : int
		-_lastColumn : int
		-_line : int
		+getColumn() : int
		+getLine() : int
		-_inStream : std::istream&
		-moveBackward() : void
		-moveForward() : void
	}

	class ScannerConfig {
		+ScannerConfig(std::istream& inputStream)
		+~ScannerConfig()
		-_scan : Scanner
		-_actualToken : Token
		-_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token
		-_makeToken(ScopedEnum ::TokenKind kind, std::string value, int column, int line) : Token
		+getToken() : Token
		+peekToken() : Token
		-_charIsString(char c) : bool
	}

	class ScannerFD {
		-ScannerFD()
		+ScannerFD(int fd)
		+~ScannerFD()
		+eof() : bool
		-_buffer : char
		-_c : char
		+get() : char
		+peek() : char
		+unget() : char
		-_column : int
		-_fd : int
		-_lastColumn : int
		-_line : int
		+getColumn() : int
		+getLine() : int
		-_idx : size_t
		+{static} bufferSize : static const size_t
		-moveBackward() : void
		-moveForward() : void
	}

	enum ScopedEnum::TokenKind {
		kColon
		kComma
		kEndOfInput
		kError
		kIdentifier
		kLeftBrace
		kNewLine
		kRightBrace
		kString
	}

	class ScopedEnum {
	}

	class Token {
		+kind : ScopedEnum ::TokenKind
		+column : int
		+line : int
		+value : std::string
	}

	namespace parser::http {
		class ScannerHttpRequest {
			+ScannerHttpRequest(std::istream& inputStream)
			+~ScannerHttpRequest()
			-_scan : Scanner
			-_actualToken : Token
			-_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token
			+getToken(bool skipLWS) : Token
			+peekToken() : Token
			-_charIsString(char c) : bool
			+getChar() : char
		}

		enum ScopedEnum::TokenKind {
			kCarriage
			kColon
			kComma
			kEndOfInput
			kError
			kLWS
			kLeftBrace
			kNewLine
			kRightBrace
			kString
		}

		class ScopedEnum {
		}

		class Token {
			+kind : ScopedEnum ::TokenKind
			+column : int
			+line : int
			+value : std::string
		}
	}
}


namespace sckt {
	class Socket {
		+Socket()
		+~Socket()
		+getAddrLen() : addrLen_type {query}
		+getAddr() : addr_type {query}
		+setFd(int domain, int type) : bool
		+getFd() : fd_type {query}
		-_fd : int
		-_addrLen : sckt::socklen_t
		-_addr : struct sockaddr_in
		+setAddr(int domain, int interface, int port) : void
		+setAddr(struct sockaddr_in addr) : void
		+setFd(int fd) : void
	}
}





/' Inheritance relationships '/

.AHttpMessage <|- - .HttpRequest


.AHttpMessage <|- - .HttpResponse


parser.IScanner <|- - parser.Scanner


parser.IScanner <|- - parser.ScannerFD





/' Aggregation relationships '/

clnt.Client *- - sckt.Socket


.HttpRequest *- - .Uri


.HttpResponse *- - .HttpStatus


parser.ScannerConfig *- - parser.Scanner


parser.ScannerConfig "2" *- - parser.Token


parser.parser::http.ScannerHttpRequest *- - parser.Scanner


parser.parser::http.ScannerHttpRequest "2" *- - parser.Token


.Server *- - sckt.Socket


.ServerConfig o- - .ServerConfig


.ServerConfig::ServerBlock::Location *- - .Uri


.ServerHandler *- - .Server


parser.Token "4" *- - parser.ScopedEnum






/' Nested objects '/

.HttpStatus +- - .HttpStatus::Code


parser.ScopedEnum +- - parser.ScopedEnum::TokenKind


parser.ScopedEnum +- - parser.parser::http.ScopedEnum::TokenKind


.ServerConfig +- - .ServerConfig::ServerBlock


.ServerConfig::ServerBlock +- - .ServerConfig::ServerBlock::Host


.ServerConfig::ServerBlock +- - .ServerConfig::ServerBlock::Location


.Uri +- - .Uri::SyntaxError




@enduml

@startuml






class AHttpMessage {
	+AHttpMessage()
	+~AHttpMessage()
	#_headers : map_type
	+getHeaders() : map_type
	+getContentLength() : size_t
	#_content : std::string
	+getContent() : std::string
	+getHeader(std::string name) : std::string
	+addHeader(std::string name, std::string value) : void
	+readContent(std::istream is) : void
	+setContent(std::string content) : void
}


class HttpRequest {
	+HttpRequest()
	+~HttpRequest()
	+{static} create(std::istream& inputStream) : HttpRequest
	-_uri : Uri
	+getUri() : Uri&
	-_method : std::string
	-_version : std::string
	+toString() : std::string
	+getMethod() : std::string&
	+setMethod(std::string method) : void
	+setUri(const Uri& uri) : void
	+setVersion(std::string version) : void
	+write(std::ostream os) : void
}


class HttpResponse {
	+HttpResponse()
	+~HttpResponse()
	-_status : HttpStatus
	+getStatus() : int
	+getStatusMessage(int code) : std::string
	+toString() : std::string
	+read(std::istream is) : void
	+sendError(int code, std::ofstream out) : void
	+setContentLength(int contentLength) : void
	+setStatus(int code) : void
	+write(std::ostream os) : void
}


class HttpStatus {
	+HttpStatus()
	+~HttpStatus()
	+isClientError(int code) : bool
	+isError(int code) : bool
	+isInformational(int code) : bool
	+isRedirection(int code) : bool
	+isServerError(int code) : bool
	+isSuccessful(int code) : bool
	-_value : int
	+getValue() : int {query}
	+getMessage(int code) : std::string {query}
	+setValue(int code) : void
}


class Server {
	+Server(int port)
	+Server(const Server& s)
	+~Server()
	+operator=(const Server& s) : Server&
	+getReq(sckt::fd_type fd) : bool
	+getRequest(sckt::fd_type fd, std::string* request) : bool
	+start() : bool
	-_clients : clients_type
	-_port : int
	-_socket : sckt::Socket
	-_pfd : struct pollfd
	+connectClient() : void
	+disconnectClient(clients_type::iterator client) : void
	+manageClient(clients_type::iterator client) : void
	+stop() : void
	+update() : void
}


class ServerConfig {
	-ServerConfig(const std::string& filepath)
	-ServerConfig(ServerConfig &)
	-operator=(const ServerConfig &) : ServerConfig&
	+{static} getInstance(std::string filepath) : ServerConfig*
	-{static} _singleton : static ServerConfig*
	-_filepath : std::string
	+getFilepath() : std::string {query}
	-_servers : std::vector<ServerBlock>
	-_parse(std::istream &) : void
}


class ServerHandler {
	+ServerHandler(std::vector<int> ports)
	+~ServerHandler()
	-_servers : std::vector<Server>
	+run() : void
}


class Uri {
	+Uri()
	+Uri(const std::string& uri)
	+Uri(const std::string& scheme, const std::string& pathEtc)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& pathEtc)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& path, const std::string& query)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& path, const std::string& query, const std::string& fragment)
	+Uri(Uri &)
	+~Uri()
	+operator=(const Uri &) : Uri&
	+operator=(const std::string& uri) : Uri&
	+empty() : bool {query}
	+isRelative() : bool {query}
	+isWellKnownPort() : bool {query}
	-_fragment : std::string
	-_host : std::string
	-_path : std::string
	-_query : std::string
	-_scheme : std::string
	-_userInfo : std::string
	+decode(std::string s) : std::string {query}
	+getAuthority() : std::string {query}
	+getFragment() : std::string
	+getHost() : std::string
	+getPath() : std::string
	+getPathAndQuery() : std::string {query}
	+getPathEtc() : std::string {query}
	+getQuery() : std::string {query}
	+getRawQuery() : std::string
	+getScheme() : std::string
	+getUserInfo() : std::string
	+toString() : std::string
	-_port : u_short
	+getPort() : u_short {query}
	+getSpecifiedPort() : u_short
	+getWellKnownPort() : u_short {query}
	-_lowerStringInPlace(std::string& s) : void
	-_parseAuthority(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parseHostAndPort(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parsePathEtc(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parseUri(const std::string& uri) : void
	+clear() : void
	+setAuthority(const std::string &) : void
	+setFragment(const std::string &) : void
	+setHost(const std::string &) : void
	+setPath(const std::string &) : void
	+setPathEtc(const std::string &) : void
	+setPort(u_short) : void
	+setQuery(const std::string &) : void
	+setRawQuery(const std::string &) : void
	+setScheme(const std::string &) : void
	+setSpecifiedPort(u_short) : void
	+setUserInfo(const std::string &) : void
}


class Uri::SyntaxError {
	-what() : char*
}


enum HttpStatus::Code {
	Accepted
	AlreadyReported
	BadGateway
	BadRequest
	Conflict
	Continue
	Created
	EarlyHints
	ExpectationFailed
	FailedDependency
	Forbidden
	Found
	GatewayTimeout
	Gone
	HTTPVersionNotSupported
	IMUsed
	ImATeapot
	InsufficientStorage
	InternalServerError
	LengthRequired
	Locked
	LoopDetected
	MethodNotAllowed
	MovedPermanently
	MultiStatus
	MultipleChoices
	NetworkAuthenticationRequired
	NoContent
	NonAuthoritativeInformation
	NotAcceptable
	NotExtended
	NotFound
	NotImplemented
	NotModified
	OK
	PartialContent
	PayloadTooLarge
	PaymentRequired
	PermanentRedirect
	PreconditionFailed
	PreconditionRequired
	Processing
	ProxyAuthenticationRequired
	RangeNotSatisfiable
	RequestHeaderFieldsTooLarge
	RequestTimeout
	ResetContent
	SeeOther
	ServiceUnavailable
	SwitchingProtocols
	TemporaryRedirect
	TooManyRequests
	URITooLong
	Unauthorized
	UnavailableForLegalReasons
	UnprocessableEntity
	UnsupportedMediaType
	UpgradeRequired
	UseProxy
	VariantAlsoNegotiates
}


class ServerConfig::ServerBlock {
	+errors : std::map<u_short, std::string>
	+root : std::string
	+serverName : std::string
	+listens : std::vector<Host>
	+indexes : std::vector<std::string>
}


class ServerConfig::ServerBlock::Host {
	+port : int
	+host : std::string
}


class ServerConfig::ServerBlock::Location {
	+fastCgiPass : Host
	+path : Uri
	+autoindex : bool
	+client_max_body_size : size_t
}


namespace clnt {
	class Client {
		+Client()
		+~Client()
		-_socket : sckt::Socket
		+getAddr() : sckt::addr_type {query}
		+getFd() : sckt::fd_type {query}
		-_pfd : struct pollfd
		+getPfd() : struct pollfd {query}
		+setAddr(sckt::addr_type addr) : void
		+setFd(sckt::fd_type fd) : void
		+setPfd() : void
	}
}


namespace parser {
	abstract class IScanner {
		+~IScanner()
		+{abstract} eof() : bool
		+{abstract} get() : char
		+{abstract} peek() : char
		+{abstract} unget() : char
		+{abstract} getColumn() : int
		+{abstract} getLine() : int
	}

	class Scanner {
		-Scanner()
		+Scanner(std::istream& inputStream)
		+~Scanner()
		+eof() : bool
		-_c : char
		+get() : char
		+peek() : char
		+unget() : char
		-_column : int
		-_lastColumn : int
		-_line : int
		+getColumn() : int
		+getLine() : int
		-_inStream : std::istream&
		-moveBackward() : void
		-moveForward() : void
	}

	class ScannerConfig {
		+ScannerConfig(std::istream& inputStream)
		+~ScannerConfig()
		-_scan : Scanner
		-_actualToken : Token
		-_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token
		-_makeToken(ScopedEnum ::TokenKind kind, std::string value, int column, int line) : Token
		+getToken() : Token
		+peekToken() : Token
		-_charIsString(char c) : bool
	}

	class ScannerFD {
		-ScannerFD()
		+ScannerFD(int fd)
		+~ScannerFD()
		+eof() : bool
		-_buffer : char
		-_c : char
		+get() : char
		+peek() : char
		+unget() : char
		-_column : int
		-_fd : int
		-_lastColumn : int
		-_line : int
		+getColumn() : int
		+getLine() : int
		-_idx : size_t
		+{static} bufferSize : static const size_t
		-moveBackward() : void
		-moveForward() : void
	}

	enum ScopedEnum::TokenKind {
		kColon
		kComma
		kEndOfInput
		kError
		kIdentifier
		kLeftBrace
		kNewLine
		kRightBrace
		kString
	}

	class ScopedEnum {
	}

	class Token {
		+kind : ScopedEnum ::TokenKind
		+column : int
		+line : int
		+value : std::string
	}

	namespace parser::http {
		class ScannerHttpRequest {
			+ScannerHttpRequest(std::istream& inputStream)
			+~ScannerHttpRequest()
			-_scan : Scanner
			-_actualToken : Token
			-_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token
			+getToken(bool skipLWS) : Token
			+peekToken() : Token
			-_charIsString(char c) : bool
			+getChar() : char
		}

		enum ScopedEnum::TokenKind {
			kCarriage
			kColon
			kComma
			kEndOfInput
			kError
			kLWS
			kLeftBrace
			kNewLine
			kRightBrace
			kString
		}

		class ScopedEnum {
		}

		class Token {
			+kind : ScopedEnum ::TokenKind
			+column : int
			+line : int
			+value : std::string
		}
	}
}


namespace sckt {
	class Socket {
		+Socket()
		+~Socket()
		+getAddrLen() : addrLen_type {query}
		+getAddr() : addr_type {query}
		+setFd(int domain, int type) : bool
		+getFd() : fd_type {query}
		-_fd : int
		-_addrLen : sckt::socklen_t
		-_addr : struct sockaddr_in
		+setAddr(int domain, int interface, int port) : void
		+setAddr(struct sockaddr_in addr) : void
		+setFd(int fd) : void
	}
}






.AHttpMessage <|- - .HttpRequest


.AHttpMessage <|- - .HttpResponse


parser.IScanner <|- - parser.Scanner


parser.IScanner <|- - parser.ScannerFD






clnt.Client *- - sckt.Socket


.HttpRequest *- - .Uri


.HttpResponse *- - .HttpStatus


parser.ScannerConfig *- - parser.Scanner


parser.ScannerConfig "2" *- - parser.Token


parser.parser::http.ScannerHttpRequest *- - parser.Scanner


parser.parser::http.ScannerHttpRequest "2" *- - parser.Token


.Server *- - sckt.Socket


.ServerConfig o- - .ServerConfig


.ServerConfig::ServerBlock::Location *- - .Uri


.ServerHandler *- - .Server


parser.Token "4" *- - parser.ScopedEnum







.HttpStatus +- - .HttpStatus::Code


parser.ScopedEnum +- - parser.ScopedEnum::TokenKind


parser.ScopedEnum +- - parser.parser::http.ScopedEnum::TokenKind


.ServerConfig +- - .ServerConfig::ServerBlock


.ServerConfig::ServerBlock +- - .ServerConfig::ServerBlock::Host


.ServerConfig::ServerBlock +- - .ServerConfig::ServerBlock::Location


.Uri +- - .Uri::SyntaxError




@enduml

PlantUML version 1.2021.7(Sun May 23 14:40:07 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>