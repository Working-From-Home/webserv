<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2593px" preserveAspectRatio="none" style="width:4442px;height:2593px;background:#FFFFFF;" version="1.1" viewBox="0 0 4442 2593" width="4442px" zoomAndPan="magnify"><defs><filter height="300%" id="fljvlka2uajed" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[2958fbf0cf116a17b62fd82d2560c2cb]
cluster clnt--><polygon fill="#FFFFFF" filter="url(#fljvlka2uajed)" points="1601.5,400,1636.5,400,1643.5,422.2969,1863.5,422.2969,1863.5,627,1601.5,627,1601.5,400" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1601.5" x2="1643.5" y1="422.2969" y2="422.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="29" x="1605.5" y="414.9951">clnt</text><!--MD5=[72fae8e1779ba7dedab19f6352fd74e8]
cluster parser--><polygon fill="#FFFFFF" filter="url(#fljvlka2uajed)" points="2243.5,6,2301.5,6,2308.5,28.2969,4425.5,28.2969,4425.5,1481,2243.5,1481,2243.5,6" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2243.5" x2="2308.5" y1="28.2969" y2="28.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="2247.5" y="20.9951">parser</text><!--MD5=[b6e572006dbb8b0f8a1ba9680d075f22]
cluster parser.parser::config--><polygon fill="#FFFFFF" filter="url(#fljvlka2uajed)" points="3223.5,49,3342.5,49,3349.5,71.2969,4401.5,71.2969,4401.5,276,3223.5,276,3223.5,49" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="3223.5" x2="3349.5" y1="71.2969" y2="71.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="113" x="3227.5" y="63.9951">parser::config</text><!--MD5=[95a29eb3a89a4bc4d7ac2991752bde1e]
cluster parser.parser::http--><polygon fill="#FFFFFF" filter="url(#fljvlka2uajed)" points="2743.5,55.5,2845.5,55.5,2852.5,77.7969,3199.5,77.7969,3199.5,1457,2743.5,1457,2743.5,55.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2743.5" x2="2852.5" y1="77.7969" y2="77.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="96" x="2747.5" y="70.4951">parser::http</text><!--MD5=[66b8634aa6783c47ab7e2fafd66a99d7]
cluster sckt--><polygon fill="#FFFFFF" filter="url(#fljvlka2uajed)" points="1656.5,699.5,1695.5,699.5,1702.5,721.7969,1986.5,721.7969,1986.5,952.5,1656.5,952.5,1656.5,699.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1656.5" x2="1702.5" y1="721.7969" y2="721.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="33" x="1660.5" y="714.4951">sckt</text><!--MD5=[a87a15c13a8fdb5d9aefbbee89df4b1b]
class clnt.Client--><rect codeLine="279" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="176.0469" id="clnt.Client" style="stroke:#A80036;stroke-width:1.5;" width="230" x="1617.5" y="435"/><ellipse cx="1710.75" cy="451" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1713.7188,456.6406 Q1713.1406,456.9375 1712.5,457.0781 Q1711.8594,457.2344 1711.1563,457.2344 Q1708.6563,457.2344 1707.3281,455.5938 Q1706.0156,453.9375 1706.0156,450.8125 Q1706.0156,447.6875 1707.3281,446.0313 Q1708.6563,444.375 1711.1563,444.375 Q1711.8594,444.375 1712.5,444.5313 Q1713.1563,444.6875 1713.7188,444.9844 L1713.7188,447.7031 Q1713.0938,447.125 1712.5,446.8594 Q1711.9063,446.5781 1711.2813,446.5781 Q1709.9375,446.5781 1709.25,447.6563 Q1708.5625,448.7188 1708.5625,450.8125 Q1708.5625,452.9063 1709.25,453.9844 Q1709.9375,455.0469 1711.2813,455.0469 Q1711.9063,455.0469 1712.5,454.7813 Q1713.0938,454.5 1713.7188,453.9219 L1713.7188,456.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="35" x="1731.25" y="455.1543">Client</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1618.5" x2="1846.5" y1="467" y2="467"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1625.5" y="475"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="1637.5" y="481.2104">_socket : sckt::Socket</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1625.5" y="487.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="1637.5" y="494.0151">_pfd : struct pollfd</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1618.5" x2="1846.5" y1="500.6094" y2="500.6094"/><ellipse cx="1628.5" cy="511.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1637.5" y="514.8198">Client()</text><ellipse cx="1628.5" cy="524.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="1637.5" y="527.6245">~Client()</text><ellipse cx="1628.5" cy="537.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="201" x="1637.5" y="540.4292">getAddr() : sckt::addr_type {query}</text><ellipse cx="1628.5" cy="550.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="1637.5" y="553.2339">getFd() : sckt::fd_type {query}</text><ellipse cx="1628.5" cy="562.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="1637.5" y="566.0386">getPfd() : struct pollfd {query}</text><ellipse cx="1628.5" cy="575.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="1637.5" y="578.8433">setAddr(sckt::addr_type addr) : void</text><ellipse cx="1628.5" cy="588.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="1637.5" y="591.6479">setFd(sckt::fd_type fd) : void</text><ellipse cx="1628.5" cy="601.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="1637.5" y="604.4526">setPfd() : void</text><!--MD5=[03653400ed6ccc44e236f77c5d24f176]
class parser.IScanner--><rect codeLine="295" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="137.6328" id="parser.IScanner" style="stroke:#A80036;stroke-width:1.5;" width="121" x="2423" y="103"/><ellipse cx="2452.85" cy="119" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2452.9594,114.3438 L2451.8031,119.4219 L2454.1313,119.4219 L2452.9594,114.3438 Z M2451.475,112.1094 L2454.4594,112.1094 L2457.8188,124.5 L2455.3656,124.5 L2454.6,121.4375 L2451.3188,121.4375 L2450.5688,124.5 L2448.1313,124.5 L2451.475,112.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="56" x="2470.15" y="123.1543">IScanner</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2424" x2="2543" y1="135" y2="135"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2424" x2="2543" y1="143" y2="143"/><ellipse cx="2434" cy="154" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="2443" y="157.2104">~IScanner()</text><ellipse cx="2434" cy="166.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="2443" y="170.0151">eof() : bool</text><ellipse cx="2434" cy="179.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="63" x="2443" y="182.8198">get() : char</text><ellipse cx="2434" cy="192.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="72" x="2443" y="195.6245">peek() : char</text><ellipse cx="2434" cy="205.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="77" x="2443" y="208.4292">unget() : char</text><ellipse cx="2434" cy="218.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="95" x="2443" y="221.2339">getColumn() : int</text><ellipse cx="2434" cy="230.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="75" x="2443" y="234.0386">getLine() : int</text><!--MD5=[03a3e5cf65a4250f2ddeffa42169cd18]
class parser.Scanner--><rect codeLine="305" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="252.875" id="parser.Scanner" style="stroke:#A80036;stroke-width:1.5;" width="235" x="2492" y="396.5"/><ellipse cx="2579.25" cy="412.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2582.2188,418.1406 Q2581.6406,418.4375 2581,418.5781 Q2580.3594,418.7344 2579.6563,418.7344 Q2577.1563,418.7344 2575.8281,417.0938 Q2574.5156,415.4375 2574.5156,412.3125 Q2574.5156,409.1875 2575.8281,407.5313 Q2577.1563,405.875 2579.6563,405.875 Q2580.3594,405.875 2581,406.0313 Q2581.6563,406.1875 2582.2188,406.4844 L2582.2188,409.2031 Q2581.5938,408.625 2581,408.3594 Q2580.4063,408.0781 2579.7813,408.0781 Q2578.4375,408.0781 2577.75,409.1563 Q2577.0625,410.2188 2577.0625,412.3125 Q2577.0625,414.4063 2577.75,415.4844 Q2578.4375,416.5469 2579.7813,416.5469 Q2580.4063,416.5469 2581,416.2813 Q2581.5938,416 2582.2188,415.4219 L2582.2188,418.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="52" x="2599.75" y="416.6543">Scanner</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2493" x2="2726" y1="428.5" y2="428.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2500" y="436.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="2512" y="442.7104">_c : char</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2500" y="449.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="2512" y="455.5151">_column : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2500" y="462.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="2512" y="468.3198">_lastColumn : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2500" y="474.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="52" x="2512" y="481.1245">_line : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2500" y="487.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="2512" y="493.9292">_inStream : std::istream&amp;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2493" x2="2726" y1="500.5234" y2="500.5234"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2500" y="508.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="2512" y="514.7339">Scanner()</text><ellipse cx="2503" cy="524.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="2512" y="527.5386">Scanner(std::istream&amp; inputStream)</text><ellipse cx="2503" cy="537.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="2512" y="540.3433">~Scanner()</text><ellipse cx="2503" cy="549.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="2512" y="553.1479">eof() : bool</text><ellipse cx="2503" cy="562.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="2512" y="565.9526">get() : char</text><ellipse cx="2503" cy="575.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="2512" y="578.7573">peek() : char</text><ellipse cx="2503" cy="588.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="2512" y="591.562">unget() : char</text><ellipse cx="2503" cy="601.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="2512" y="604.3667">getColumn() : int</text><ellipse cx="2503" cy="613.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="75" x="2512" y="617.1714">getLine() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2500" y="623.7656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="2512" y="629.9761">moveBackward() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2500" y="636.5703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="2512" y="642.7808">moveForward() : void</text><!--MD5=[0d9ebab3398b7f12da4049a59f1f340d]
class parser.ScannerFD--><rect codeLine="324" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="291.2891" id="parser.ScannerFD" style="stroke:#A80036;stroke-width:1.5;" width="197" x="2260" y="377.5"/><ellipse cx="2320.25" cy="393.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2323.2188,399.1406 Q2322.6406,399.4375 2322,399.5781 Q2321.3594,399.7344 2320.6563,399.7344 Q2318.1563,399.7344 2316.8281,398.0938 Q2315.5156,396.4375 2315.5156,393.3125 Q2315.5156,390.1875 2316.8281,388.5313 Q2318.1563,386.875 2320.6563,386.875 Q2321.3594,386.875 2322,387.0313 Q2322.6563,387.1875 2323.2188,387.4844 L2323.2188,390.2031 Q2322.5938,389.625 2322,389.3594 Q2321.4063,389.0781 2320.7813,389.0781 Q2319.4375,389.0781 2318.75,390.1563 Q2318.0625,391.2188 2318.0625,393.3125 Q2318.0625,395.4063 2318.75,396.4844 Q2319.4375,397.5469 2320.7813,397.5469 Q2321.4063,397.5469 2322,397.2813 Q2322.5938,397 2323.2188,396.4219 L2323.2188,399.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="68" x="2340.75" y="397.6543">ScannerFD</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2261" x2="2456" y1="409.5" y2="409.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="417.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="2280" y="423.7104">_buffer : char</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="430.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="2280" y="436.5151">_c : char</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="443.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="2280" y="449.3198">_column : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="455.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="2280" y="462.1245">_fd : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="468.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="2280" y="474.9292">_lastColumn : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="481.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="52" x="2280" y="487.7339">_line : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="494.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="2280" y="500.5386">_idx : size_t</text><ellipse cx="2271" cy="510.1328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="171" x="2280" y="513.3433">bufferSize : static const size_t</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2261" x2="2456" y1="519.9375" y2="519.9375"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="527.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="69" x="2280" y="534.1479">ScannerFD()</text><ellipse cx="2271" cy="543.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="2280" y="546.9526">ScannerFD(int fd)</text><ellipse cx="2271" cy="556.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="2280" y="559.7573">~ScannerFD()</text><ellipse cx="2271" cy="569.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="2280" y="572.562">eof() : bool</text><ellipse cx="2271" cy="582.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="2280" y="585.3667">get() : char</text><ellipse cx="2271" cy="594.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="2280" y="598.1714">peek() : char</text><ellipse cx="2271" cy="607.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="2280" y="610.9761">unget() : char</text><ellipse cx="2271" cy="620.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="2280" y="623.7808">getColumn() : int</text><ellipse cx="2271" cy="633.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="75" x="2280" y="636.5854">getLine() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="643.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="2280" y="649.3901">moveBackward() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2268" y="655.9844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="2280" y="662.1948">moveForward() : void</text><!--MD5=[30e7f62f9009e929c026e8aff2b59e1f]
class parser.parser::config.ScannerConfig--><rect codeLine="347" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="163.2422" id="parser.parser::config.ScannerConfig" style="stroke:#A80036;stroke-width:1.5;" width="536" x="3628.5" y="90.5"/><ellipse cx="3846.75" cy="106.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3849.7188,112.1406 Q3849.1406,112.4375 3848.5,112.5781 Q3847.8594,112.7344 3847.1563,112.7344 Q3844.6563,112.7344 3843.3281,111.0938 Q3842.0156,109.4375 3842.0156,106.3125 Q3842.0156,103.1875 3843.3281,101.5313 Q3844.6563,99.875 3847.1563,99.875 Q3847.8594,99.875 3848.5,100.0313 Q3849.1563,100.1875 3849.7188,100.4844 L3849.7188,103.2031 Q3849.0938,102.625 3848.5,102.3594 Q3847.9063,102.0781 3847.2813,102.0781 Q3845.9375,102.0781 3845.25,103.1563 Q3844.5625,104.2188 3844.5625,106.3125 Q3844.5625,108.4063 3845.25,109.4844 Q3845.9375,110.5469 3847.2813,110.5469 Q3847.9063,110.5469 3848.5,110.2813 Q3849.0938,110 3849.7188,109.4219 L3849.7188,112.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="91" x="3867.25" y="110.6543">ScannerConfig</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3629.5" x2="4163.5" y1="122.5" y2="122.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3636.5" y="130.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="3648.5" y="136.7104">_scan : Scanner</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3636.5" y="143.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="3648.5" y="149.5151">_actualToken : Token</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3629.5" x2="4163.5" y1="156.1094" y2="156.1094"/><ellipse cx="3639.5" cy="167.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="3648.5" y="170.3198">ScannerConfig(std::istream&amp; inputStream)</text><ellipse cx="3639.5" cy="179.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="3648.5" y="183.1245">~ScannerConfig()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3636.5" y="189.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="397" x="3648.5" y="195.9292">_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3636.5" y="202.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="510" x="3648.5" y="208.7339">_makeToken(ScopedEnum ::TokenKind kind, std::string value, int column, int line) : Token</text><ellipse cx="3639.5" cy="218.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="171" x="3648.5" y="221.5386">getToken(bool skipNL) : Token</text><ellipse cx="3639.5" cy="231.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="3648.5" y="234.3433">peekToken() : Token</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3636.5" y="240.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="3648.5" y="247.1479">_charIsString(char c) : bool</text><!--MD5=[414e3cf37ce236621db0971e48441e71]
class parser.parser::config.ScopedEnum::TokenKind--><rect codeLine="359" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="176.0469" id="parser.parser::config.ScopedEnum::TokenKind" style="stroke:#A80036;stroke-width:1.5;" width="186" x="4199.5" y="84"/><ellipse cx="4214.5" cy="100" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4218.6094,106 L4210.8906,106 L4210.8906,93.6094 L4218.6094,93.6094 L4218.6094,95.7656 L4213.3438,95.7656 L4213.3438,98.4375 L4218.1094,98.4375 L4218.1094,100.5938 L4213.3438,100.5938 L4213.3438,103.8438 L4218.6094,103.8438 L4218.6094,106 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="154" x="4228.5" y="104.1543">ScopedEnum::TokenKind</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4200.5" x2="4384.5" y1="116" y2="116"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="38" x="4205.5" y="130.2104">kColon</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="4205.5" y="143.0151">kComma</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="4205.5" y="155.8198">kEndOfInput</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="35" x="4205.5" y="168.6245">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="4205.5" y="181.4292">kIdentifier</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="4205.5" y="194.2339">kLeftBrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="4205.5" y="207.0386">kNewLine</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="4205.5" y="219.8433">kRightBrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="4205.5" y="232.6479">kSemiColon</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="4205.5" y="245.4526">kString</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4200.5" x2="4384.5" y1="252.0469" y2="252.0469"/><!--MD5=[f056ec1984d87fce166951b9db0e507b]
class parser.parser::config.ScopedEnum--><rect codeLine="372" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="48" id="parser.parser::config.ScopedEnum" style="stroke:#A80036;stroke-width:1.5;" width="114" x="3479.5" y="148"/><ellipse cx="3494.5" cy="164" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3497.4688,169.6406 Q3496.8906,169.9375 3496.25,170.0781 Q3495.6094,170.2344 3494.9063,170.2344 Q3492.4063,170.2344 3491.0781,168.5938 Q3489.7656,166.9375 3489.7656,163.8125 Q3489.7656,160.6875 3491.0781,159.0313 Q3492.4063,157.375 3494.9063,157.375 Q3495.6094,157.375 3496.25,157.5313 Q3496.9063,157.6875 3497.4688,157.9844 L3497.4688,160.7031 Q3496.8438,160.125 3496.25,159.8594 Q3495.6563,159.5781 3495.0313,159.5781 Q3493.6875,159.5781 3493,160.6563 Q3492.3125,161.7188 3492.3125,163.8125 Q3492.3125,165.9063 3493,166.9844 Q3493.6875,168.0469 3495.0313,168.0469 Q3495.6563,168.0469 3496.25,167.7813 Q3496.8438,167.5 3497.4688,166.9219 L3497.4688,169.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="82" x="3508.5" y="168.1543">ScopedEnum</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3480.5" x2="3592.5" y1="180" y2="180"/><line style="stroke:#A80036;stroke-width:1.5;" x1="3480.5" x2="3592.5" y1="188" y2="188"/><!--MD5=[cbe65f012fdf0df50fe8a9a5af60c7b6]
class parser.parser::config.Token--><rect codeLine="375" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="99.2188" id="parser.parser::config.Token" style="stroke:#A80036;stroke-width:1.5;" width="205" x="3239" y="122.5"/><ellipse cx="3318.25" cy="138.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3321.2188,144.1406 Q3320.6406,144.4375 3320,144.5781 Q3319.3594,144.7344 3318.6563,144.7344 Q3316.1563,144.7344 3314.8281,143.0938 Q3313.5156,141.4375 3313.5156,138.3125 Q3313.5156,135.1875 3314.8281,133.5313 Q3316.1563,131.875 3318.6563,131.875 Q3319.3594,131.875 3320,132.0313 Q3320.6563,132.1875 3321.2188,132.4844 L3321.2188,135.2031 Q3320.5938,134.625 3320,134.3594 Q3319.4063,134.0781 3318.7813,134.0781 Q3317.4375,134.0781 3316.75,135.1563 Q3316.0625,136.2188 3316.0625,138.3125 Q3316.0625,140.4063 3316.75,141.4844 Q3317.4375,142.5469 3318.7813,142.5469 Q3319.4063,142.5469 3320,142.2813 Q3320.5938,142 3321.2188,141.4219 L3321.2188,144.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="38" x="3338.75" y="142.6543">Token</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3240" x2="3443" y1="154.5" y2="154.5"/><ellipse cx="3250" cy="165.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="3259" y="168.7104">kind : ScopedEnum ::TokenKind</text><ellipse cx="3250" cy="178.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3259" y="181.5151">column : int</text><ellipse cx="3250" cy="191.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="3259" y="194.3198">line : int</text><ellipse cx="3250" cy="203.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="3259" y="207.1245">value : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3240" x2="3443" y1="213.7188" y2="213.7188"/><!--MD5=[72561c5925aa6377ecddb603ff726ebb]
class parser.parser::http.ScannerHttpRequest--><rect codeLine="384" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="163.2422" id="parser.parser::http.ScannerHttpRequest" style="stroke:#A80036;stroke-width:1.5;" width="423" x="2760" y="90.5"/><ellipse cx="2901.75" cy="106.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2904.7188,112.1406 Q2904.1406,112.4375 2903.5,112.5781 Q2902.8594,112.7344 2902.1563,112.7344 Q2899.6563,112.7344 2898.3281,111.0938 Q2897.0156,109.4375 2897.0156,106.3125 Q2897.0156,103.1875 2898.3281,101.5313 Q2899.6563,99.875 2902.1563,99.875 Q2902.8594,99.875 2903.5,100.0313 Q2904.1563,100.1875 2904.7188,100.4844 L2904.7188,103.2031 Q2904.0938,102.625 2903.5,102.3594 Q2902.9063,102.0781 2902.2813,102.0781 Q2900.9375,102.0781 2900.25,103.1563 Q2899.5625,104.2188 2899.5625,106.3125 Q2899.5625,108.4063 2900.25,109.4844 Q2900.9375,110.5469 2902.2813,110.5469 Q2902.9063,110.5469 2903.5,110.2813 Q2904.0938,110 2904.7188,109.4219 L2904.7188,112.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="131" x="2922.25" y="110.6543">ScannerHttpRequest</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2761" x2="3182" y1="122.5" y2="122.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2768" y="130.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="2780" y="136.7104">_scan : Scanner</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2768" y="143.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="2780" y="149.5151">_actualToken : Token</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2761" x2="3182" y1="156.1094" y2="156.1094"/><ellipse cx="2771" cy="167.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="2780" y="170.3198">ScannerHttpRequest(std::istream&amp; inputStream)</text><ellipse cx="2771" cy="179.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="2780" y="183.1245">~ScannerHttpRequest()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2768" y="189.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="397" x="2780" y="195.9292">_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token</text><ellipse cx="2771" cy="205.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="180" x="2780" y="208.7339">getToken(bool skipLWS) : Token</text><ellipse cx="2771" cy="218.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="2780" y="221.5386">peekToken() : Token</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2768" y="228.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="2780" y="234.3433">_charIsString(char c) : bool</text><ellipse cx="2771" cy="243.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="2780" y="247.1479">getChar() : char</text><!--MD5=[f349b6d239fd9f9ee251f8e3641cb7bd]
class parser.parser::http.ScopedEnum::TokenKind--><rect codeLine="396" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="176.0469" id="parser.parser::http.ScopedEnum::TokenKind" style="stroke:#A80036;stroke-width:1.5;" width="186" x="2992.5" y="1265"/><ellipse cx="3007.5" cy="1281" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3011.6094,1287 L3003.8906,1287 L3003.8906,1274.6094 L3011.6094,1274.6094 L3011.6094,1276.7656 L3006.3438,1276.7656 L3006.3438,1279.4375 L3011.1094,1279.4375 L3011.1094,1281.5938 L3006.3438,1281.5938 L3006.3438,1284.8438 L3011.6094,1284.8438 L3011.6094,1287 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="154" x="3021.5" y="1285.1543">ScopedEnum::TokenKind</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2993.5" x2="3177.5" y1="1297" y2="1297"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="2998.5" y="1311.2104">kCarriage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="38" x="2998.5" y="1324.0151">kColon</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="2998.5" y="1336.8198">kComma</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="2998.5" y="1349.6245">kEndOfInput</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="35" x="2998.5" y="1362.4292">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="29" x="2998.5" y="1375.2339">kLWS</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="2998.5" y="1388.0386">kLeftBrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="2998.5" y="1400.8433">kNewLine</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="2998.5" y="1413.6479">kRightBrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="2998.5" y="1426.4526">kString</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2993.5" x2="3177.5" y1="1433.0469" y2="1433.0469"/><!--MD5=[9ebdd5bcd2a4a695d07bb1e199730f62]
class parser.parser::http.ScopedEnum--><rect codeLine="409" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="48" id="parser.parser::http.ScopedEnum" style="stroke:#A80036;stroke-width:1.5;" width="114" x="3028.5" y="811.5"/><ellipse cx="3043.5" cy="827.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3046.4688,833.1406 Q3045.8906,833.4375 3045.25,833.5781 Q3044.6094,833.7344 3043.9063,833.7344 Q3041.4063,833.7344 3040.0781,832.0938 Q3038.7656,830.4375 3038.7656,827.3125 Q3038.7656,824.1875 3040.0781,822.5313 Q3041.4063,820.875 3043.9063,820.875 Q3044.6094,820.875 3045.25,821.0313 Q3045.9063,821.1875 3046.4688,821.4844 L3046.4688,824.2031 Q3045.8438,823.625 3045.25,823.3594 Q3044.6563,823.0781 3044.0313,823.0781 Q3042.6875,823.0781 3042,824.1563 Q3041.3125,825.2188 3041.3125,827.3125 Q3041.3125,829.4063 3042,830.4844 Q3042.6875,831.5469 3044.0313,831.5469 Q3044.6563,831.5469 3045.25,831.2813 Q3045.8438,831 3046.4688,830.4219 L3046.4688,833.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="82" x="3057.5" y="831.6543">ScopedEnum</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3029.5" x2="3141.5" y1="843.5" y2="843.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="3029.5" x2="3141.5" y1="851.5" y2="851.5"/><!--MD5=[dadf3ffcb8425e4ad7a9514e4bae5d7b]
class parser.parser::http.Token--><rect codeLine="412" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="99.2188" id="parser.parser::http.Token" style="stroke:#A80036;stroke-width:1.5;" width="205" x="2979" y="473.5"/><ellipse cx="3058.25" cy="489.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3061.2188,495.1406 Q3060.6406,495.4375 3060,495.5781 Q3059.3594,495.7344 3058.6563,495.7344 Q3056.1563,495.7344 3054.8281,494.0938 Q3053.5156,492.4375 3053.5156,489.3125 Q3053.5156,486.1875 3054.8281,484.5313 Q3056.1563,482.875 3058.6563,482.875 Q3059.3594,482.875 3060,483.0313 Q3060.6563,483.1875 3061.2188,483.4844 L3061.2188,486.2031 Q3060.5938,485.625 3060,485.3594 Q3059.4063,485.0781 3058.7813,485.0781 Q3057.4375,485.0781 3056.75,486.1563 Q3056.0625,487.2188 3056.0625,489.3125 Q3056.0625,491.4063 3056.75,492.4844 Q3057.4375,493.5469 3058.7813,493.5469 Q3059.4063,493.5469 3060,493.2813 Q3060.5938,493 3061.2188,492.4219 L3061.2188,495.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="38" x="3078.75" y="493.6543">Token</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2980" x2="3183" y1="505.5" y2="505.5"/><ellipse cx="2990" cy="516.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="2999" y="519.7104">kind : ScopedEnum ::TokenKind</text><ellipse cx="2990" cy="529.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="2999" y="532.5151">column : int</text><ellipse cx="2990" cy="542.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="2999" y="545.3198">line : int</text><ellipse cx="2990" cy="554.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="2999" y="558.1245">value : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2980" x2="3183" y1="564.7188" y2="564.7188"/><!--MD5=[c814b2570e8b692cff8da2b2fec3e4d1]
class sckt.Socket--><rect codeLine="423" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="201.6563" id="sckt.Socket" style="stroke:#A80036;stroke-width:1.5;" width="298" x="1672.5" y="734.5"/><ellipse cx="1795.75" cy="750.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1798.7188,756.1406 Q1798.1406,756.4375 1797.5,756.5781 Q1796.8594,756.7344 1796.1563,756.7344 Q1793.6563,756.7344 1792.3281,755.0938 Q1791.0156,753.4375 1791.0156,750.3125 Q1791.0156,747.1875 1792.3281,745.5313 Q1793.6563,743.875 1796.1563,743.875 Q1796.8594,743.875 1797.5,744.0313 Q1798.1563,744.1875 1798.7188,744.4844 L1798.7188,747.2031 Q1798.0938,746.625 1797.5,746.3594 Q1796.9063,746.0781 1796.2813,746.0781 Q1794.9375,746.0781 1794.25,747.1563 Q1793.5625,748.2188 1793.5625,750.3125 Q1793.5625,752.4063 1794.25,753.4844 Q1794.9375,754.5469 1796.2813,754.5469 Q1796.9063,754.5469 1797.5,754.2813 Q1798.0938,754 1798.7188,753.4219 L1798.7188,756.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="43" x="1816.25" y="754.6543">Socket</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1673.5" x2="1969.5" y1="766.5" y2="766.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1680.5" y="774.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="1692.5" y="780.7104">_fd : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1680.5" y="787.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="1692.5" y="793.5151">_addrLen : sckt::socklen_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1680.5" y="800.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="149" x="1692.5" y="806.3198">_addr : struct sockaddr_in</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1673.5" x2="1969.5" y1="812.9141" y2="812.9141"/><ellipse cx="1683.5" cy="823.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="1692.5" y="827.1245">Socket()</text><ellipse cx="1683.5" cy="836.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="1692.5" y="839.9292">~Socket()</text><ellipse cx="1683.5" cy="849.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="1692.5" y="852.7339">getAddrLen() : addrLen_type {query}</text><ellipse cx="1683.5" cy="862.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1692.5" y="865.5386">getAddr() : addr_type {query}</text><ellipse cx="1683.5" cy="875.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="1692.5" y="878.3433">setFd(int domain, int type) : bool</text><ellipse cx="1683.5" cy="887.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="1692.5" y="891.1479">getFd() : fd_type {query}</text><ellipse cx="1683.5" cy="900.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="1692.5" y="903.9526">setAddr(int domain, int interface, int port) : void</text><ellipse cx="1683.5" cy="913.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="1692.5" y="916.7573">setAddr(struct sockaddr_in addr) : void</text><ellipse cx="1683.5" cy="926.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="1692.5" y="929.562">setFd(int fd) : void</text><!--MD5=[7b8ee10810d76e60b4e35294a2da36fd]
class AHttpMessage--><rect codeLine="8" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="188.8516" id="AHttpMessage" style="stroke:#A80036;stroke-width:1.5;" width="327" x="205" y="428.5"/><ellipse cx="318.75" cy="444.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M321.7188,450.1406 Q321.1406,450.4375 320.5,450.5781 Q319.8594,450.7344 319.1563,450.7344 Q316.6563,450.7344 315.3281,449.0938 Q314.0156,447.4375 314.0156,444.3125 Q314.0156,441.1875 315.3281,439.5313 Q316.6563,437.875 319.1563,437.875 Q319.8594,437.875 320.5,438.0313 Q321.1563,438.1875 321.7188,438.4844 L321.7188,441.2031 Q321.0938,440.625 320.5,440.3594 Q319.9063,440.0781 319.2813,440.0781 Q317.9375,440.0781 317.25,441.1563 Q316.5625,442.2188 316.5625,444.3125 Q316.5625,446.4063 317.25,447.4844 Q317.9375,448.5469 319.2813,448.5469 Q319.9063,448.5469 320.5,448.2813 Q321.0938,448 321.7188,447.4219 L321.7188,450.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="91" x="339.25" y="448.6543">AHttpMessage</text><line style="stroke:#A80036;stroke-width:1.5;" x1="206" x2="531" y1="460.5" y2="460.5"/><polygon fill="none" points="216,466.5,220,470.5,216,474.5,212,470.5" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="225" y="474.7104">_headers : map_type</text><polygon fill="none" points="216,479.3047,220,483.3047,216,487.3047,212,483.3047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="225" y="487.5151">_content : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="206" x2="531" y1="494.1094" y2="494.1094"/><ellipse cx="216" cy="505.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="225" y="508.3198">AHttpMessage()</text><ellipse cx="216" cy="517.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="225" y="521.1245">~AHttpMessage()</text><ellipse cx="216" cy="530.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="225" y="533.9292">getHeaders() : map_type</text><ellipse cx="216" cy="543.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="225" y="546.7339">getContentLength() : size_t</text><ellipse cx="216" cy="556.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="225" y="559.5386">getContent() : std::string</text><ellipse cx="216" cy="569.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="225" y="572.3433">getHeader(std::string name) : std::string</text><ellipse cx="216" cy="581.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="225" y="585.1479">addHeader(std::string name, std::string value) : void</text><ellipse cx="216" cy="594.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="225" y="597.9526">readContent(std::istream is) : void</text><ellipse cx="216" cy="607.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="225" y="610.7573">setContent(std::string content) : void</text><!--MD5=[4da09b18006e212e9efdc897e83005a4]
class HttpRequest--><rect codeLine="23" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="214.4609" id="HttpRequest" style="stroke:#A80036;stroke-width:1.5;" width="305" x="508" y="728.5"/><ellipse cx="616.75" cy="744.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M619.7188,750.1406 Q619.1406,750.4375 618.5,750.5781 Q617.8594,750.7344 617.1563,750.7344 Q614.6563,750.7344 613.3281,749.0938 Q612.0156,747.4375 612.0156,744.3125 Q612.0156,741.1875 613.3281,739.5313 Q614.6563,737.875 617.1563,737.875 Q617.8594,737.875 618.5,738.0313 Q619.1563,738.1875 619.7188,738.4844 L619.7188,741.2031 Q619.0938,740.625 618.5,740.3594 Q617.9063,740.0781 617.2813,740.0781 Q615.9375,740.0781 615.25,741.1563 Q614.5625,742.2188 614.5625,744.3125 Q614.5625,746.4063 615.25,747.4844 Q615.9375,748.5469 617.2813,748.5469 Q617.9063,748.5469 618.5,748.2813 Q619.0938,748 619.7188,747.4219 L619.7188,750.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="79" x="637.25" y="748.6543">HttpRequest</text><line style="stroke:#A80036;stroke-width:1.5;" x1="509" x2="812" y1="760.5" y2="760.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="516" y="768.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="528" y="774.7104">_uri : Uri</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="516" y="781.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="528" y="787.5151">_method : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="516" y="794.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="528" y="800.3198">_version : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="509" x2="812" y1="806.9141" y2="806.9141"/><ellipse cx="519" cy="817.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="528" y="821.1245">HttpRequest()</text><ellipse cx="519" cy="830.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="86" x="528" y="833.9292">~HttpRequest()</text><ellipse cx="519" cy="843.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="279" x="528" y="846.7339">create(std::istream&amp; inputStream) : HttpRequest</text><ellipse cx="519" cy="856.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="80" x="528" y="859.5386">getUri() : Uri&amp;</text><ellipse cx="519" cy="869.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="528" y="872.3433">toString() : std::string</text><ellipse cx="519" cy="881.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="528" y="885.1479">getMethod() : std::string&amp;</text><ellipse cx="519" cy="894.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="528" y="897.9526">setMethod(std::string method) : void</text><ellipse cx="519" cy="907.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="528" y="910.7573">setUri(const Uri&amp; uri) : void</text><ellipse cx="519" cy="920.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="528" y="923.562">setVersion(std::string version) : void</text><ellipse cx="519" cy="933.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="528" y="936.3667">write(std::ostream os) : void</text><!--MD5=[8209a440f783abc22af203f8410078b7]
class HttpResponse--><rect codeLine="40" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="188.8516" id="HttpResponse" style="stroke:#A80036;stroke-width:1.5;" width="279" x="66" y="741"/><ellipse cx="156.75" cy="757" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M159.7188,762.6406 Q159.1406,762.9375 158.5,763.0781 Q157.8594,763.2344 157.1563,763.2344 Q154.6563,763.2344 153.3281,761.5938 Q152.0156,759.9375 152.0156,756.8125 Q152.0156,753.6875 153.3281,752.0313 Q154.6563,750.375 157.1563,750.375 Q157.8594,750.375 158.5,750.5313 Q159.1563,750.6875 159.7188,750.9844 L159.7188,753.7031 Q159.0938,753.125 158.5,752.8594 Q157.9063,752.5781 157.2813,752.5781 Q155.9375,752.5781 155.25,753.6563 Q154.5625,754.7188 154.5625,756.8125 Q154.5625,758.9063 155.25,759.9844 Q155.9375,761.0469 157.2813,761.0469 Q157.9063,761.0469 158.5,760.7813 Q159.0938,760.5 159.7188,759.9219 L159.7188,762.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="89" x="177.25" y="761.1543">HttpResponse</text><line style="stroke:#A80036;stroke-width:1.5;" x1="67" x2="344" y1="773" y2="773"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="74" y="781"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="86" y="787.2104">_status : HttpStatus</text><line style="stroke:#A80036;stroke-width:1.5;" x1="67" x2="344" y1="793.8047" y2="793.8047"/><ellipse cx="77" cy="804.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="86" y="808.0151">HttpResponse()</text><ellipse cx="77" cy="817.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="86" y="820.8198">~HttpResponse()</text><ellipse cx="77" cy="830.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="86" y="833.6245">getStatus() : int</text><ellipse cx="77" cy="843.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="86" y="846.4292">getStatusMessage(int code) : std::string</text><ellipse cx="77" cy="856.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="86" y="859.2339">toString() : std::string</text><ellipse cx="77" cy="868.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="86" y="872.0386">read(std::istream is) : void</text><ellipse cx="77" cy="881.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="86" y="884.8433">sendError(int code, std::ofstream out) : void</text><ellipse cx="77" cy="894.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="86" y="897.6479">setContentLength(int contentLength) : void</text><ellipse cx="77" cy="907.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="86" y="910.4526">setStatus(int code) : void</text><ellipse cx="77" cy="920.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="86" y="923.2573">write(std::ostream os) : void</text><!--MD5=[c44987c012b320dadbb07a5af3d158a1]
class HttpStatus--><rect codeLine="55" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="201.6563" id="HttpStatus" style="stroke:#A80036;stroke-width:1.5;" width="269" x="7" y="1252"/><ellipse cx="103.25" cy="1268" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M106.2188,1273.6406 Q105.6406,1273.9375 105,1274.0781 Q104.3594,1274.2344 103.6563,1274.2344 Q101.1563,1274.2344 99.8281,1272.5938 Q98.5156,1270.9375 98.5156,1267.8125 Q98.5156,1264.6875 99.8281,1263.0313 Q101.1563,1261.375 103.6563,1261.375 Q104.3594,1261.375 105,1261.5313 Q105.6563,1261.6875 106.2188,1261.9844 L106.2188,1264.7031 Q105.5938,1264.125 105,1263.8594 Q104.4063,1263.5781 103.7813,1263.5781 Q102.4375,1263.5781 101.75,1264.6563 Q101.0625,1265.7188 101.0625,1267.8125 Q101.0625,1269.9063 101.75,1270.9844 Q102.4375,1272.0469 103.7813,1272.0469 Q104.4063,1272.0469 105,1271.7813 Q105.5938,1271.5 106.2188,1270.9219 L106.2188,1273.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="68" x="123.75" y="1272.1543">HttpStatus</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="275" y1="1284" y2="1284"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="1292"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="1298.2104">_value : int</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="275" y1="1304.8047" y2="1304.8047"/><ellipse cx="18" cy="1315.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="27" y="1319.0151">HttpStatus()</text><ellipse cx="18" cy="1328.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="27" y="1331.8198">~HttpStatus()</text><ellipse cx="18" cy="1341.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="27" y="1344.6245">isClientError(int code) : bool</text><ellipse cx="18" cy="1354.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="27" y="1357.4292">isError(int code) : bool</text><ellipse cx="18" cy="1367.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="1370.2339">isInformational(int code) : bool</text><ellipse cx="18" cy="1379.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="1383.0386">isRedirection(int code) : bool</text><ellipse cx="18" cy="1392.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="1395.8433">isServerError(int code) : bool</text><ellipse cx="18" cy="1405.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="27" y="1408.6479">isSuccessful(int code) : bool</text><ellipse cx="18" cy="1418.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="27" y="1421.4526">getValue() : int {query}</text><ellipse cx="18" cy="1431.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="27" y="1434.2573">getMessage(int code) : std::string {query}</text><ellipse cx="18" cy="1443.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="27" y="1447.062">setValue(int code) : void</text><!--MD5=[c60af77fe5573b84a4aa4bce89659574]
class Server--><rect codeLine="71" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="252.875" id="Server" style="stroke:#A80036;stroke-width:1.5;" width="342" x="1882.5" y="396.5"/><ellipse cx="2029.25" cy="412.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2032.2188,418.1406 Q2031.6406,418.4375 2031,418.5781 Q2030.3594,418.7344 2029.6563,418.7344 Q2027.1563,418.7344 2025.8281,417.0938 Q2024.5156,415.4375 2024.5156,412.3125 Q2024.5156,409.1875 2025.8281,407.5313 Q2027.1563,405.875 2029.6563,405.875 Q2030.3594,405.875 2031,406.0313 Q2031.6563,406.1875 2032.2188,406.4844 L2032.2188,409.2031 Q2031.5938,408.625 2031,408.3594 Q2030.4063,408.0781 2029.7813,408.0781 Q2028.4375,408.0781 2027.75,409.1563 Q2027.0625,410.2188 2027.0625,412.3125 Q2027.0625,414.4063 2027.75,415.4844 Q2028.4375,416.5469 2029.7813,416.5469 Q2030.4063,416.5469 2031,416.2813 Q2031.5938,416 2032.2188,415.4219 L2032.2188,418.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="2049.75" y="416.6543">Server</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1883.5" x2="2223.5" y1="428.5" y2="428.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1890.5" y="436.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="1902.5" y="442.7104">_clients : clients_type</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1890.5" y="449.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="1902.5" y="455.5151">_port : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1890.5" y="462.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="1902.5" y="468.3198">_socket : sckt::Socket</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1890.5" y="474.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="1902.5" y="481.1245">_pfd : struct pollfd</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1883.5" x2="2223.5" y1="487.7188" y2="487.7188"/><ellipse cx="1893.5" cy="498.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1902.5" y="501.9292">Server(int port)</text><ellipse cx="1893.5" cy="511.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="1902.5" y="514.7339">Server(const Server&amp; s)</text><ellipse cx="1893.5" cy="524.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="1902.5" y="527.5386">~Server()</text><ellipse cx="1893.5" cy="537.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="1902.5" y="540.3433">operator=(const Server&amp; s) : Server&amp;</text><ellipse cx="1893.5" cy="549.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1902.5" y="553.1479">getReq(sckt::fd_type fd) : bool</text><ellipse cx="1893.5" cy="562.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="1902.5" y="565.9526">getRequest(sckt::fd_type fd, std::string* request) : bool</text><ellipse cx="1893.5" cy="575.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="1902.5" y="578.7573">start() : bool</text><ellipse cx="1893.5" cy="588.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="1902.5" y="591.562">connectClient() : void</text><ellipse cx="1893.5" cy="601.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="1902.5" y="604.3667">disconnectClient(clients_type::iterator client) : void</text><ellipse cx="1893.5" cy="613.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="1902.5" y="617.1714">manageClient(clients_type::iterator client) : void</text><ellipse cx="1893.5" cy="626.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="1902.5" y="629.9761">stop() : void</text><ellipse cx="1893.5" cy="639.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="1902.5" y="642.7808">update() : void</text><!--MD5=[9cb2d3f67e2a29a05f7271ee0ae3aa70]
class ServerConfig--><rect codeLine="91" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="291.2891" id="ServerConfig" style="stroke:#A80036;stroke-width:1.5;" width="477" x="1067" y="26.5"/><ellipse cx="1261.75" cy="42.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1264.7188,48.1406 Q1264.1406,48.4375 1263.5,48.5781 Q1262.8594,48.7344 1262.1563,48.7344 Q1259.6563,48.7344 1258.3281,47.0938 Q1257.0156,45.4375 1257.0156,42.3125 Q1257.0156,39.1875 1258.3281,37.5313 Q1259.6563,35.875 1262.1563,35.875 Q1262.8594,35.875 1263.5,36.0313 Q1264.1563,36.1875 1264.7188,36.4844 L1264.7188,39.2031 Q1264.0938,38.625 1263.5,38.3594 Q1262.9063,38.0781 1262.2813,38.0781 Q1260.9375,38.0781 1260.25,39.1563 Q1259.5625,40.2188 1259.5625,42.3125 Q1259.5625,44.4063 1260.25,45.4844 Q1260.9375,46.5469 1262.2813,46.5469 Q1262.9063,46.5469 1263.5,46.2813 Q1264.0938,46 1264.7188,45.4219 L1264.7188,48.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="79" x="1282.25" y="46.6543">ServerConfig</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1068" x2="1543" y1="58.5" y2="58.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="66.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="1087" y="72.7104">_singleton : static ServerConfig*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="79.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="1087" y="85.5151">_configFilePath : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="92.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="1087" y="98.3198">_servers : std::vector&lt;ServerBlock&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1068" x2="1543" y1="104.9141" y2="104.9141"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="112.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="232" x="1087" y="119.1245">ServerConfig(const std::string&amp; filepath)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="125.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1087" y="131.9292">ServerConfig(ServerConfig &amp;)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="138.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="1087" y="144.7339">_parseHost(const std::string&amp; host) : Host</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="151.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="1087" y="157.5386">_parseListen(parser::config::ScannerConfig&amp; scanner) : Host</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="164.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="1087" y="170.3433">_parseServer(parser::config::ScannerConfig&amp; scanner) : ServerBlock</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="176.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="1087" y="183.1479">operator=(const ServerConfig &amp;) : ServerConfig&amp;</text><ellipse cx="1078" cy="192.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="271" x="1087" y="195.9526">getInstance(std::string filepath) : ServerConfig*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="202.5469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="1087" y="208.7573">_parseIndex(parser::config::ScannerConfig&amp; scanner) : std::string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="215.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="1087" y="221.562">_parseRoot(parser::config::ScannerConfig&amp; scanner) : std::string</text><ellipse cx="1078" cy="231.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="1087" y="234.3667">getConfigFilePath() : std::string {query}</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="240.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1087" y="247.1714">_parse(std::istream &amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="253.7656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="1087" y="259.9761">_parseErrorPage(parser::config::ScannerConfig&amp; scanner) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="266.5703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="1087" y="272.7808">_parseLocation(parser::config::ScannerConfig&amp; scanner) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="279.375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="1087" y="285.5854">_parseServerName(parser::config::ScannerConfig&amp; scanner) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="292.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="1087" y="298.3901">_skipSemiColonNewLine(parser::config::ScannerConfig&amp; scanner) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1075" y="304.9844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="451" x="1087" y="311.1948">_throw_SyntaxError(parser::config::Token t, const std::string&amp; error_str) : void</text><!--MD5=[02c1842b1bb2ca3b7f34325b2fb88da7]
class ServerConfig::SyntaxError--><rect codeLine="114" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="112.0234" id="ServerConfig::SyntaxError" style="stroke:#A80036;stroke-width:1.5;" width="262" x="1320.5" y="467"/><ellipse cx="1367.75" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1370.7188,488.6406 Q1370.1406,488.9375 1369.5,489.0781 Q1368.8594,489.2344 1368.1563,489.2344 Q1365.6563,489.2344 1364.3281,487.5938 Q1363.0156,485.9375 1363.0156,482.8125 Q1363.0156,479.6875 1364.3281,478.0313 Q1365.6563,476.375 1368.1563,476.375 Q1368.8594,476.375 1369.5,476.5313 Q1370.1563,476.6875 1370.7188,476.9844 L1370.7188,479.7031 Q1370.0938,479.125 1369.5,478.8594 Q1368.9063,478.5781 1368.2813,478.5781 Q1366.9375,478.5781 1366.25,479.6563 Q1365.5625,480.7188 1365.5625,482.8125 Q1365.5625,484.9063 1366.25,485.9844 Q1366.9375,487.0469 1368.2813,487.0469 Q1368.9063,487.0469 1369.5,486.7813 Q1370.0938,486.5 1370.7188,485.9219 L1370.7188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="159" x="1388.25" y="487.1543">ServerConfig::SyntaxError</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1321.5" x2="1581.5" y1="499" y2="499"/><polygon fill="none" points="1331.5,505,1335.5,509,1331.5,513,1327.5,509" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="1340.5" y="513.2104">_message : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1321.5" x2="1581.5" y1="519.8047" y2="519.8047"/><ellipse cx="1331.5" cy="530.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="1340.5" y="534.0151">SyntaxError(const char* message)</text><ellipse cx="1331.5" cy="543.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="1340.5" y="546.8198">SyntaxError(const std::string&amp; message)</text><ellipse cx="1331.5" cy="556.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="1340.5" y="559.6245">~SyntaxError()</text><ellipse cx="1331.5" cy="569.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="1340.5" y="572.4292">what() : char*</text><!--MD5=[c28606f55bc2b80d7d22aade593501c4]
class ServerHandler--><rect codeLine="123" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="99.2188" id="ServerHandler" style="stroke:#A80036;stroke-width:1.5;" width="243" x="1932" y="122.5"/><ellipse cx="2004.75" cy="138.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2007.7188,144.1406 Q2007.1406,144.4375 2006.5,144.5781 Q2005.8594,144.7344 2005.1563,144.7344 Q2002.6563,144.7344 2001.3281,143.0938 Q2000.0156,141.4375 2000.0156,138.3125 Q2000.0156,135.1875 2001.3281,133.5313 Q2002.6563,131.875 2005.1563,131.875 Q2005.8594,131.875 2006.5,132.0313 Q2007.1563,132.1875 2007.7188,132.4844 L2007.7188,135.2031 Q2007.0938,134.625 2006.5,134.3594 Q2005.9063,134.0781 2005.2813,134.0781 Q2003.9375,134.0781 2003.25,135.1563 Q2002.5625,136.2188 2002.5625,138.3125 Q2002.5625,140.4063 2003.25,141.4844 Q2003.9375,142.5469 2005.2813,142.5469 Q2005.9063,142.5469 2006.5,142.2813 Q2007.0938,142 2007.7188,141.4219 L2007.7188,144.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="89" x="2025.25" y="142.6543">ServerHandler</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1933" x2="2174" y1="154.5" y2="154.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1940" y="162.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1952" y="168.7104">_servers : std::vector&lt;Server&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1933" x2="2174" y1="175.3047" y2="175.3047"/><ellipse cx="1943" cy="186.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="1952" y="189.5151">ServerHandler(std::vector&lt;int&gt; ports)</text><ellipse cx="1943" cy="199.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1952" y="202.3198">~ServerHandler()</text><ellipse cx="1943" cy="211.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1952" y="215.1245">run() : void</text><!--MD5=[54966a871ed9594cfed77a625bb7d0e7]
class Uri--><rect codeLine="131" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="701.0391" id="Uri" style="stroke:#A80036;stroke-width:1.5;" width="826" x="311.5" y="1002.5"/><ellipse cx="711.75" cy="1018.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M714.7188,1024.1406 Q714.1406,1024.4375 713.5,1024.5781 Q712.8594,1024.7344 712.1563,1024.7344 Q709.6563,1024.7344 708.3281,1023.0938 Q707.0156,1021.4375 707.0156,1018.3125 Q707.0156,1015.1875 708.3281,1013.5313 Q709.6563,1011.875 712.1563,1011.875 Q712.8594,1011.875 713.5,1012.0313 Q714.1563,1012.1875 714.7188,1012.4844 L714.7188,1015.2031 Q714.0938,1014.625 713.5,1014.3594 Q712.9063,1014.0781 712.2813,1014.0781 Q710.9375,1014.0781 710.25,1015.1563 Q709.5625,1016.2188 709.5625,1018.3125 Q709.5625,1020.4063 710.25,1021.4844 Q710.9375,1022.5469 712.2813,1022.5469 Q712.9063,1022.5469 713.5,1022.2813 Q714.0938,1022 714.7188,1021.4219 L714.7188,1024.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="17" x="732.25" y="1022.6543">Uri</text><line style="stroke:#A80036;stroke-width:1.5;" x1="312.5" x2="1136.5" y1="1034.5" y2="1034.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1042.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="331.5" y="1048.7104">_fragment : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1055.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="331.5" y="1061.5151">_host : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1068.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="331.5" y="1074.3198">_path : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1080.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="331.5" y="1087.1245">_query : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1093.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="331.5" y="1099.9292">_scheme : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1106.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="331.5" y="1112.7339">_userInfo : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1119.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="331.5" y="1125.5386">_port : u_short</text><line style="stroke:#A80036;stroke-width:1.5;" x1="312.5" x2="1136.5" y1="1132.1328" y2="1132.1328"/><ellipse cx="322.5" cy="1143.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="331.5" y="1146.3433">Uri()</text><ellipse cx="322.5" cy="1155.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="331.5" y="1159.1479">Uri(const std::string&amp; uri)</text><ellipse cx="322.5" cy="1168.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="331.5" y="1171.9526">Uri(const std::string&amp; scheme, const std::string&amp; pathEtc)</text><ellipse cx="322.5" cy="1181.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="501" x="331.5" y="1184.7573">Uri(const std::string&amp; scheme, const std::string&amp; authority, const std::string&amp; pathEtc)</text><ellipse cx="322.5" cy="1194.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="632" x="331.5" y="1197.562">Uri(const std::string&amp; scheme, const std::string&amp; authority, const std::string&amp; path, const std::string&amp; query)</text><ellipse cx="322.5" cy="1207.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="800" x="331.5" y="1210.3667">Uri(const std::string&amp; scheme, const std::string&amp; authority, const std::string&amp; path, const std::string&amp; query, const std::string&amp; fragment)</text><ellipse cx="322.5" cy="1219.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="54" x="331.5" y="1223.1714">Uri(Uri &amp;)</text><ellipse cx="322.5" cy="1232.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="331.5" y="1235.9761">~Uri()</text><ellipse cx="322.5" cy="1245.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="331.5" y="1248.7808">operator=(const Uri &amp;) : Uri&amp;</text><ellipse cx="322.5" cy="1258.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="331.5" y="1261.5854">operator=(const std::string&amp; uri) : Uri&amp;</text><ellipse cx="322.5" cy="1271.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="331.5" y="1274.3901">empty() : bool {query}</text><ellipse cx="322.5" cy="1283.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="331.5" y="1287.1948">isRelative() : bool {query}</text><ellipse cx="322.5" cy="1296.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="186" x="331.5" y="1299.9995">isWellKnownPort() : bool {query}</text><ellipse cx="322.5" cy="1309.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="331.5" y="1312.8042">decode(std::string s) : std::string {query}</text><ellipse cx="322.5" cy="1322.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="331.5" y="1325.6089">getAuthority() : std::string {query}</text><ellipse cx="322.5" cy="1335.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="331.5" y="1338.4136">getFragment() : std::string</text><ellipse cx="322.5" cy="1348.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="331.5" y="1351.2183">getHost() : std::string</text><ellipse cx="322.5" cy="1360.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="331.5" y="1364.0229">getPath() : std::string</text><ellipse cx="322.5" cy="1373.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="331.5" y="1376.8276">getPathAndQuery() : std::string {query}</text><ellipse cx="322.5" cy="1386.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="189" x="331.5" y="1389.6323">getPathEtc() : std::string {query}</text><ellipse cx="322.5" cy="1399.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="331.5" y="1402.437">getQuery() : std::string {query}</text><ellipse cx="322.5" cy="1412.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="331.5" y="1415.2417">getRawQuery() : std::string</text><ellipse cx="322.5" cy="1424.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="331.5" y="1428.0464">getScheme() : std::string</text><ellipse cx="322.5" cy="1437.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="331.5" y="1440.8511">getUserInfo() : std::string</text><ellipse cx="322.5" cy="1450.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="331.5" y="1453.6558">toString() : std::string</text><ellipse cx="322.5" cy="1463.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="331.5" y="1466.4604">getPort() : u_short {query}</text><ellipse cx="322.5" cy="1476.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="331.5" y="1479.2651">getSpecifiedPort() : u_short</text><ellipse cx="322.5" cy="1488.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="331.5" y="1492.0698">getWellKnownPort() : u_short {query}</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1498.6641"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="523" x="331.5" y="1504.8745">_parseAuthority(std::string::const_iterator&amp; it, const std::string::const_iterator&amp; end) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1511.4688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="543" x="331.5" y="1517.6792">_parseHostAndPort(std::string::const_iterator&amp; it, const std::string::const_iterator&amp; end) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1524.2734"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="515" x="331.5" y="1530.4839">_parsePathEtc(std::string::const_iterator&amp; it, const std::string::const_iterator&amp; end) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="319.5" y="1537.0781"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="221" x="331.5" y="1543.2886">_parseUri(const std::string&amp; uri) : void</text><ellipse cx="322.5" cy="1552.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="331.5" y="1556.0933">clear() : void</text><ellipse cx="322.5" cy="1565.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="331.5" y="1568.8979">setAuthority(const std::string &amp;) : void</text><ellipse cx="322.5" cy="1578.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="331.5" y="1581.7026">setFragment(const std::string &amp;) : void</text><ellipse cx="322.5" cy="1591.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="331.5" y="1594.5073">setHost(const std::string &amp;) : void</text><ellipse cx="322.5" cy="1604.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="331.5" y="1607.312">setPath(const std::string &amp;) : void</text><ellipse cx="322.5" cy="1616.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="331.5" y="1620.1167">setPathEtc(const std::string &amp;) : void</text><ellipse cx="322.5" cy="1629.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="331.5" y="1632.9214">setPort(u_short) : void</text><ellipse cx="322.5" cy="1642.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="331.5" y="1645.7261">setQuery(const std::string &amp;) : void</text><ellipse cx="322.5" cy="1655.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="331.5" y="1658.5308">setRawQuery(const std::string &amp;) : void</text><ellipse cx="322.5" cy="1668.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="331.5" y="1671.3354">setScheme(const std::string &amp;) : void</text><ellipse cx="322.5" cy="1680.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="331.5" y="1684.1401">setSpecifiedPort(u_short) : void</text><ellipse cx="322.5" cy="1693.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="331.5" y="1696.9448">setUserInfo(const std::string &amp;) : void</text><!--MD5=[bf80aca272b4dbb7277da3ce6255b748]
class Uri::SyntaxError--><rect codeLine="186" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="60.8047" id="Uri::SyntaxError" style="stroke:#A80036;stroke-width:1.5;" width="129" x="660" y="2141"/><ellipse cx="675" cy="2157" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M677.9688,2162.6406 Q677.3906,2162.9375 676.75,2163.0781 Q676.1094,2163.2344 675.4063,2163.2344 Q672.9063,2163.2344 671.5781,2161.5938 Q670.2656,2159.9375 670.2656,2156.8125 Q670.2656,2153.6875 671.5781,2152.0313 Q672.9063,2150.375 675.4063,2150.375 Q676.1094,2150.375 676.75,2150.5313 Q677.4063,2150.6875 677.9688,2150.9844 L677.9688,2153.7031 Q677.3438,2153.125 676.75,2152.8594 Q676.1563,2152.5781 675.5313,2152.5781 Q674.1875,2152.5781 673.5,2153.6563 Q672.8125,2154.7188 672.8125,2156.8125 Q672.8125,2158.9063 673.5,2159.9844 Q674.1875,2161.0469 675.5313,2161.0469 Q676.1563,2161.0469 676.75,2160.7813 Q677.3438,2160.5 677.9688,2159.9219 L677.9688,2162.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="97" x="689" y="2161.1543">Uri::SyntaxError</text><line style="stroke:#A80036;stroke-width:1.5;" x1="661" x2="788" y1="2173" y2="2173"/><line style="stroke:#A80036;stroke-width:1.5;" x1="661" x2="788" y1="2181" y2="2181"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="668" y="2189"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="680" y="2195.2104">what() : char*</text><!--MD5=[b4007758ef3c7970e509fc4032ff4a77]
class HttpStatus::Code--><rect codeLine="191" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="816.2813" id="HttpStatus::Code" style="stroke:#A80036;stroke-width:1.5;" width="188" x="47.5" y="1763.5"/><ellipse cx="84.1" cy="1779.5" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M88.2094,1785.5 L80.4906,1785.5 L80.4906,1773.1094 L88.2094,1773.1094 L88.2094,1775.2656 L82.9438,1775.2656 L82.9438,1777.9375 L87.7094,1777.9375 L87.7094,1780.0938 L82.9438,1780.0938 L82.9438,1783.3438 L88.2094,1783.3438 L88.2094,1785.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="102.9" y="1783.6543">HttpStatus::Code</text><line style="stroke:#A80036;stroke-width:1.5;" x1="48.5" x2="234.5" y1="1795.5" y2="1795.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="51" x="53.5" y="1809.7104">Accepted</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="53.5" y="1822.5151">AlreadyReported</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="53.5" y="1835.3198">BadGateway</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="53.5" y="1848.1245">BadRequest</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="53.5" y="1860.9292">Conflict</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="53.5" y="1873.7339">Continue</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="45" x="53.5" y="1886.5386">Created</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="57" x="53.5" y="1899.3433">EarlyHints</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="53.5" y="1912.1479">ExpectationFailed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="53.5" y="1924.9526">FailedDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="53.5" y="1937.7573">Forbidden</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="34" x="53.5" y="1950.562">Found</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="53.5" y="1963.3667">GatewayTimeout</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="30" x="53.5" y="1976.1714">Gone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="53.5" y="1988.9761">HTTPVersionNotSupported</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="41" x="53.5" y="2001.7808">IMUsed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="53.5" y="2014.5854">ImATeapot</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="53.5" y="2027.3901">InsufficientStorage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="53.5" y="2040.1948">InternalServerError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="53.5" y="2052.9995">LengthRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="39" x="53.5" y="2065.8042">Locked</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="53.5" y="2078.6089">LoopDetected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="53.5" y="2091.4136">MethodNotAllowed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="53.5" y="2104.2183">MovedPermanently</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="53.5" y="2117.0229">MultiStatus</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="53.5" y="2129.8276">MultipleChoices</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="53.5" y="2142.6323">NetworkAuthenticationRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="59" x="53.5" y="2155.437">NoContent</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="53.5" y="2168.2417">NonAuthoritativeInformation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="80" x="53.5" y="2181.0464">NotAcceptable</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="53.5" y="2193.8511">NotExtended</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="53.5" y="2206.6558">NotFound</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="53.5" y="2219.4604">NotImplemented</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="53.5" y="2232.2651">NotModified</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="16" x="53.5" y="2245.0698">OK</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="80" x="53.5" y="2257.8745">PartialContent</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="53.5" y="2270.6792">PayloadTooLarge</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="53.5" y="2283.4839">PaymentRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="53.5" y="2296.2886">PermanentRedirect</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="53.5" y="2309.0933">PreconditionFailed</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="53.5" y="2321.8979">PreconditionRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="53.5" y="2334.7026">Processing</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="53.5" y="2347.5073">ProxyAuthenticationRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="53.5" y="2360.312">RangeNotSatisfiable</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="53.5" y="2373.1167">RequestHeaderFieldsTooLarge</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="53.5" y="2385.9214">RequestTimeout</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="76" x="53.5" y="2398.7261">ResetContent</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="54" x="53.5" y="2411.5308">SeeOther</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="53.5" y="2424.3354">ServiceUnavailable</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="53.5" y="2437.1401">SwitchingProtocols</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="53.5" y="2449.9448">TemporaryRedirect</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="53.5" y="2462.7495">TooManyRequests</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="53.5" y="2475.5542">URITooLong</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="74" x="53.5" y="2488.3589">Unauthorized</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="53.5" y="2501.1636">UnavailableForLegalReasons</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="53.5" y="2513.9683">UnprocessableEntity</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="53.5" y="2526.7729">UnsupportedMediaType</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="53.5" y="2539.5776">UpgradeRequired</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="53.5" y="2552.3823">UseProxy</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="53.5" y="2565.187">VariantAlsoNegotiates</text><line style="stroke:#A80036;stroke-width:1.5;" x1="48.5" x2="234.5" y1="2571.7813" y2="2571.7813"/><!--MD5=[c62846c0c9715c1d98dd5933e5913037]
class Host--><rect codeLine="255" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="73.6094" id="Host" style="stroke:#A80036;stroke-width:1.5;" width="122" x="1172.5" y="1316"/><ellipse cx="1214.95" cy="1332" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1217.9188,1337.6406 Q1217.3406,1337.9375 1216.7,1338.0781 Q1216.0594,1338.2344 1215.3563,1338.2344 Q1212.8563,1338.2344 1211.5281,1336.5938 Q1210.2156,1334.9375 1210.2156,1331.8125 Q1210.2156,1328.6875 1211.5281,1327.0313 Q1212.8563,1325.375 1215.3563,1325.375 Q1216.0594,1325.375 1216.7,1325.5313 Q1217.3563,1325.6875 1217.9188,1325.9844 L1217.9188,1328.7031 Q1217.2938,1328.125 1216.7,1327.8594 Q1216.1063,1327.5781 1215.4813,1327.5781 Q1214.1375,1327.5781 1213.45,1328.6563 Q1212.7625,1329.7188 1212.7625,1331.8125 Q1212.7625,1333.9063 1213.45,1334.9844 Q1214.1375,1336.0469 1215.4813,1336.0469 Q1216.1063,1336.0469 1216.7,1335.7813 Q1217.2938,1335.5 1217.9188,1334.9219 L1217.9188,1337.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="29" x="1235.05" y="1336.1543">Host</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1173.5" x2="1293.5" y1="1348" y2="1348"/><ellipse cx="1183.5" cy="1359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="1192.5" y="1362.2104">port : int</text><ellipse cx="1183.5" cy="1371.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1192.5" y="1375.0151">host : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1173.5" x2="1293.5" y1="1381.6094" y2="1381.6094"/><!--MD5=[a2d405cb1624908b526e974f0503a9ad]
class ServerBlock--><rect codeLine="261" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="112.0234" id="ServerBlock" style="stroke:#A80036;stroke-width:1.5;" width="253" x="1032" y="467"/><ellipse cx="1117.75" cy="483" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1120.7188,488.6406 Q1120.1406,488.9375 1119.5,489.0781 Q1118.8594,489.2344 1118.1563,489.2344 Q1115.6563,489.2344 1114.3281,487.5938 Q1113.0156,485.9375 1113.0156,482.8125 Q1113.0156,479.6875 1114.3281,478.0313 Q1115.6563,476.375 1118.1563,476.375 Q1118.8594,476.375 1119.5,476.5313 Q1120.1563,476.6875 1120.7188,476.9844 L1120.7188,479.7031 Q1120.0938,479.125 1119.5,478.8594 Q1118.9063,478.5781 1118.2813,478.5781 Q1116.9375,478.5781 1116.25,479.6563 Q1115.5625,480.7188 1115.5625,482.8125 Q1115.5625,484.9063 1116.25,485.9844 Q1116.9375,487.0469 1118.2813,487.0469 Q1118.9063,487.0469 1119.5,486.7813 Q1120.0938,486.5 1120.7188,485.9219 L1120.7188,488.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="73" x="1138.25" y="487.1543">ServerBlock</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1033" x2="1284" y1="499" y2="499"/><ellipse cx="1043" cy="510" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="1052" y="513.2104">errors : std::map&lt;u_short, std::string&gt;</text><ellipse cx="1043" cy="522.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="1052" y="526.0151">root : std::string</text><ellipse cx="1043" cy="535.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="1052" y="538.8198">serverName : std::string</text><ellipse cx="1043" cy="548.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="1052" y="551.6245">listens : std::vector&lt;Host&gt;</text><ellipse cx="1043" cy="561.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="1052" y="564.4292">indexes : std::vector&lt;std::string&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1033" x2="1284" y1="571.0234" y2="571.0234"/><!--MD5=[8b845773d428340f60fb8c83d7be0392]
class ServerBlock::Location--><rect codeLine="270" fill="#FEFECE" filter="url(#fljvlka2uajed)" height="99.2188" id="ServerBlock::Location" style="stroke:#A80036;stroke-width:1.5;" width="191" x="989" y="786"/><ellipse cx="1015.25" cy="802" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1018.2188,807.6406 Q1017.6406,807.9375 1017,808.0781 Q1016.3594,808.2344 1015.6563,808.2344 Q1013.1563,808.2344 1011.8281,806.5938 Q1010.5156,804.9375 1010.5156,801.8125 Q1010.5156,798.6875 1011.8281,797.0313 Q1013.1563,795.375 1015.6563,795.375 Q1016.3594,795.375 1017,795.5313 Q1017.6563,795.6875 1018.2188,795.9844 L1018.2188,798.7031 Q1017.5938,798.125 1017,797.8594 Q1016.4063,797.5781 1015.7813,797.5781 Q1014.4375,797.5781 1013.75,798.6563 Q1013.0625,799.7188 1013.0625,801.8125 Q1013.0625,803.9063 1013.75,804.9844 Q1014.4375,806.0469 1015.7813,806.0469 Q1016.4063,806.0469 1017,805.7813 Q1017.5938,805.5 1018.2188,804.9219 L1018.2188,807.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="134" x="1031.75" y="806.1543">ServerBlock::Location</text><line style="stroke:#A80036;stroke-width:1.5;" x1="990" x2="1179" y1="818" y2="818"/><ellipse cx="1000" cy="829" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="1009" y="832.2104">fastCgiPass : Host</text><ellipse cx="1000" cy="841.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="1009" y="845.0151">path : Uri</text><ellipse cx="1000" cy="854.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="1009" y="857.8198">autoindex : bool</text><ellipse cx="1000" cy="867.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="1009" y="870.6245">client_max_body_size : size_t</text><line style="stroke:#A80036;stroke-width:1.5;" x1="990" x2="1179" y1="877.2188" y2="877.2188"/><!--MD5=[d532b561af1c71ac45e887977a430bed]
reverse link AHttpMessage to HttpRequest--><path codeLine="445" d="M470.21,632.16 C499.52,663.32 531.46,697.28 560.65,728.33 " fill="none" id="AHttpMessage-backto-HttpRequest" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="465.11,636.95,456.51,617.58,475.31,627.36,465.11,636.95" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0ba115b2af8542eab78f2f0efaca30c9]
reverse link AHttpMessage to HttpResponse--><path codeLine="448" d="M310.06,635.33 C291.92,669.89 272.11,707.61 254.67,740.84 " fill="none" id="AHttpMessage-backto-HttpResponse" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="303.88,632.04,319.37,617.58,316.28,638.54,303.88,632.04" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[cbfa7bb71f2f49cdaa297ecfa7a90e7f]
reverse link parser.IScanner to parser.Scanner--><path codeLine="451" d="M2514.91,259.99 C2529.79,301.22 2547.85,351.24 2564.18,396.48 " fill="none" id="parser.IScanner-backto-parser.Scanner" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2508.3,262.31,2508.09,241.12,2521.47,257.55,2508.3,262.31" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[5232b11a531143b105b080fdb7b4bd72]
reverse link parser.IScanner to parser.ScannerFD--><path codeLine="454" d="M2452.31,260.07 C2439.63,295.49 2424.62,337.38 2410.38,377.16 " fill="none" id="parser.IScanner-backto-parser.ScannerFD" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2445.77,257.59,2459.1,241.12,2458.95,262.31,2445.77,257.59" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[eb94f7a53a9e3ef312c4b8b8668f8222]
reverse link clnt.Client to sckt.Socket--><path codeLine="462" d="M1761.2,624.11 C1771.32,659.43 1782.69,699.12 1792.82,734.43 " fill="none" id="clnt.Client-backto-sckt.Socket" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1757.53,611.32,1755.3416,618.191,1760.8423,622.8538,1763.0308,615.9828,1757.53,611.32" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4bbfc9482f136529f4bd99d966bcfa03]
reverse link HttpRequest to Uri--><path codeLine="465" d="M675.33,955.95 C677.16,970.66 679.09,986.22 681.09,1002.34 " fill="none" id="HttpRequest-backto-Uri" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="673.68,942.69,670.4489,949.1367,675.1571,954.5987,678.3881,948.152,673.68,942.69" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[10d1502400a05378b80e067465b1e462]
reverse link HttpResponse to HttpStatus--><path codeLine="468" d="M192.25,943.25 C180.98,1033.97 164.94,1163.24 153.92,1251.98 " fill="none" id="HttpResponse-backto-HttpStatus" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="193.87,930.15,189.1619,935.612,192.3929,942.0587,197.1011,936.5967,193.87,930.15" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[dbbf2eba2575171339b382ed23bffee8]
reverse link parser.parser::config.ScannerConfig to parser.Scanner--><path codeLine="471" d="M3753.06,259.76 C3709.1,282.44 3659.61,304.23 3611.5,317.5 C3425.11,368.91 2917.93,294.09 2743.5,377.5 C2732.7,382.67 2722.34,389.12 2712.52,396.41 " fill="none" id="parser.parser::config.ScannerConfig-backto-parser.Scanner" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3764.71,253.67,3757.5395,252.9057,3754.0762,259.2307,3761.2466,259.995,3764.71,253.67" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[35e0374fad0d47a8640e5cd54419cddb]
reverse link parser.parser::config.ScannerConfig to parser.parser::http.Token--><path codeLine="474" d="M3732.59,259.66 C3693.29,279.44 3651.2,299.83 3611.5,317.5 C3465.53,382.47 3292.06,447.1 3184.36,485.81 " fill="none" id="parser.parser::config.ScannerConfig-backto-parser.parser::http.Token" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3744.41,253.68,3737.2511,252.8137,3733.6981,259.0887,3740.8569,259.955,3744.41,253.68" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="3722.5082" y="273.6846">2</text><!--MD5=[07fadc8e359723fa57d59fdf3eb26ca0]
reverse link parser.parser::http.ScannerHttpRequest to parser.Scanner--><path codeLine="477" d="M2867.71,262.49 C2828.1,297.57 2782.99,338.66 2743.5,377.5 C2737.28,383.62 2730.97,389.95 2724.65,396.39 " fill="none" id="parser.parser::http.ScannerHttpRequest-backto-parser.Scanner" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2877.65,253.7,2870.5047,254.6718,2868.6535,261.6412,2875.7988,260.6694,2877.65,253.7" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[e6b92f551b3903aaa166678e7ecdfc30]
reverse link parser.parser::http.ScannerHttpRequest to parser.parser::http.Token--><path codeLine="480" d="M3000.85,266.13 C3021.87,332.81 3049.33,419.93 3066.17,473.37 " fill="none" id="parser.parser::http.ScannerHttpRequest-backto-parser.parser::http.Token" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2996.87,253.51,2994.8544,260.4337,3000.4703,264.9572,3002.4859,258.0335,2996.87,253.51" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="2990.84" y="273.7775">2</text><!--MD5=[daf039fc6a9ebf0cdbaeb133eb0d7697]
reverse link Server to sckt.Socket--><path codeLine="483" d="M1951.56,660.43 C1933.03,685.23 1914.01,710.68 1896.44,734.2 " fill="none" id="Server-backto-sckt.Socket" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1959.47,649.84,1952.6758,652.2564,1952.2932,659.4574,1959.0874,657.0409,1959.47,649.84" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[6eeba4df402bdd77fd865fb6862650af]
reverse link ServerBlock to Host--><path codeLine="486" d="M1177.26,592.35 C1184.8,622.52 1192.8,658.54 1197.5,691.5 C1231.21,927.98 1233.91,1216.21 1233.73,1315.99 " fill="none" id="ServerBlock-backto-Host" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1173.95,579.37,1171.55,586.17,1176.9038,591.0008,1179.3038,584.2008,1173.95,579.37" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[8cd0c114c4a5c65b24bc1488cc1db42b]
reverse link ServerBlock::Location to Host--><path codeLine="489" d="M1113.04,896.97 C1126.91,928.02 1143.02,966.75 1154.5,1002.5 C1190.49,1114.59 1216.44,1251.96 1227.53,1315.97 " fill="none" id="ServerBlock::Location-backto-Host" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1107.65,885.03,1106.4681,892.1436,1112.5799,895.9706,1113.7618,888.857,1107.65,885.03" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[44277716a0f310b7183f3b64ef3c6ab1]
reverse link ServerBlock::Location to Uri--><path codeLine="492" d="M1042.65,896.43 C1022.63,925.09 996.91,961.93 968.77,1002.22 " fill="none" id="ServerBlock::Location-backto-Uri" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1050.31,885.46,1043.5928,888.0828,1043.4302,895.292,1050.1475,892.6693,1050.31,885.46" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[994c3c9786dc8121991c20f5f73863b1]
reverse link ServerConfig to ServerBlock--><path codeLine="495" d="M1239.45,329.81 C1218.78,378.88 1197.32,429.83 1181.69,466.93 " fill="none" id="ServerConfig-backto-ServerBlock" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1244.54,317.72,1238.5262,321.6992,1239.8863,328.7809,1245.9001,324.8017,1244.54,317.72" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d153c192e06ce236f3b225b065a57873]
reverse link ServerConfig to ServerConfig--><path codeLine="498" d="M1555.32,126.87 C1570.13,137.66 1579,152.7 1579,172 C1579,195.75 1565.56,213.06 1544.16,223.92 " fill="none" id="ServerConfig-backto-ServerConfig" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1544.16,120.08,1547.2051,126.6166,1554.4101,126.3198,1551.365,119.7832,1544.16,120.08" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[294aeb58b9b9af8ce9ee02d245ffcb4a]
reverse link ServerHandler to Server--><path codeLine="501" d="M2053.5,234.8 C2053.5,279.44 2053.5,341.27 2053.5,396.13 " fill="none" id="ServerHandler-backto-Server" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2053.5,221.53,2049.5,227.53,2053.5,233.53,2057.5,227.53,2053.5,221.53" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b138ef6568b7918029a7e3e5f578655a]
reverse link parser.parser::http.Token to parser.parser::http.ScopedEnum--><path codeLine="504" d="M3082.3,585.83 C3083.19,655.21 3084.59,764.2 3085.2,811.42 " fill="none" id="parser.parser::http.Token-backto-parser.parser::http.ScopedEnum" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3082.12,572.52,3078.1928,578.5679,3082.265,584.5191,3086.1922,578.4712,3082.12,572.52" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="3073.6236" y="592.9554">4</text><!--MD5=[d89cf01b7450f990d9fcb21f7b42078d]
reverse link HttpStatus to HttpStatus::Code--><path codeLine="513" d="M141.5,1469.29 C141.5,1547.19 141.5,1655.16 141.5,1763.05 " fill="none" id="HttpStatus-backto-HttpStatus::Code" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="141.5" cy="1462.12" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="141.5" x2="141.5" y1="1470.12" y2="1454.12"/><line style="stroke:#A80036;stroke-width:1.0;" x1="133.5" x2="149.5" y1="1462.12" y2="1462.12"/><!--MD5=[c56ef12aac3ab1f08b7f9d4369a386f4]
reverse link parser.parser::http.ScopedEnum to parser.parser::http.ScopedEnum::TokenKind--><path codeLine="516" d="M3085.5,874.71 C3085.5,956.67 3085.5,1151.16 3085.5,1264.97 " fill="none" id="parser.parser::http.ScopedEnum-backto-parser.parser::http.ScopedEnum::TokenKind" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="3085.5" cy="867.65" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3085.5" x2="3085.5" y1="875.65" y2="859.65"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3077.5" x2="3093.5" y1="867.65" y2="867.65"/><!--MD5=[1bcd416e7edd74c96b1cbfe6498b6ef8]
reverse link parser.parser::http.ScopedEnum to parser.parser::config.ScopedEnum::TokenKind--><path codeLine="519" d="M3157.25,813.92 C3342.53,758.14 3846.02,589.75 4182.5,317.5 C4202.48,301.34 4220.88,280.82 4236.69,260.36 " fill="none" id="parser.parser::http.ScopedEnum-backto-parser.parser::config.ScopedEnum::TokenKind" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="3150.3164" cy="815.9938" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3157.9828" x2="3142.65" y1="813.7076" y2="818.28"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3152.6026" x2="3148.0302" y1="823.6602" y2="808.3274"/><!--MD5=[590e1b9c5b9beebdd9ec401f5f1418bd]
reverse link ServerBlock to ServerBlock::Location--><path codeLine="522" d="M1141.85,593.87 C1127.9,652.39 1108.35,734.41 1096.06,785.98 " fill="none" id="ServerBlock-backto-ServerBlock::Location" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="1143.5077" cy="586.9326" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1141.6554" x2="1145.36" y1="594.7152" y2="579.15"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1135.7251" x2="1151.2903" y1="585.0803" y2="588.7849"/><!--MD5=[3ee118d5e980194adc604f9f13e1ac7e]
reverse link ServerConfig to ServerConfig::SyntaxError--><path codeLine="525" d="M1371.88,331.68 C1392.17,380.17 1413.14,430.3 1428.46,466.93 " fill="none" id="ServerConfig-backto-ServerConfig::SyntaxError" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="1369.1315" cy="325.0985" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1372.223" x2="1366.04" y1="332.477" y2="317.72"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1361.753" x2="1376.51" y1="328.19" y2="322.007"/><!--MD5=[4da35ca2ae353d034a5dca0393961d97]
reverse link Uri to Uri::SyntaxError--><path codeLine="528" d="M724.5,1718.72 C724.5,1889.74 724.5,2071.08 724.5,2140.82 " fill="none" id="Uri-backto-Uri::SyntaxError" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="724.5" cy="1711.53" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="724.5" x2="724.5" y1="1719.53" y2="1703.53"/><line style="stroke:#A80036;stroke-width:1.0;" x1="716.5" x2="732.5" y1="1711.53" y2="1711.53"/><!--MD5=[496e9615975e91b2129fcb9b43a582a1]
@startuml





/' Objects '/

class AHttpMessage {
	+AHttpMessage()
	+~AHttpMessage()
	#_headers : map_type
	+getHeaders() : map_type
	+getContentLength() : size_t
	#_content : std::string
	+getContent() : std::string
	+getHeader(std::string name) : std::string
	+addHeader(std::string name, std::string value) : void
	+readContent(std::istream is) : void
	+setContent(std::string content) : void
}


class HttpRequest {
	+HttpRequest()
	+~HttpRequest()
	+{static} create(std::istream& inputStream) : HttpRequest
	-_uri : Uri
	+getUri() : Uri&
	-_method : std::string
	-_version : std::string
	+toString() : std::string
	+getMethod() : std::string&
	+setMethod(std::string method) : void
	+setUri(const Uri& uri) : void
	+setVersion(std::string version) : void
	+write(std::ostream os) : void
}


class HttpResponse {
	+HttpResponse()
	+~HttpResponse()
	-_status : HttpStatus
	+getStatus() : int
	+getStatusMessage(int code) : std::string
	+toString() : std::string
	+read(std::istream is) : void
	+sendError(int code, std::ofstream out) : void
	+setContentLength(int contentLength) : void
	+setStatus(int code) : void
	+write(std::ostream os) : void
}


class HttpStatus {
	+HttpStatus()
	+~HttpStatus()
	+isClientError(int code) : bool
	+isError(int code) : bool
	+isInformational(int code) : bool
	+isRedirection(int code) : bool
	+isServerError(int code) : bool
	+isSuccessful(int code) : bool
	-_value : int
	+getValue() : int {query}
	+getMessage(int code) : std::string {query}
	+setValue(int code) : void
}


class Server {
	+Server(int port)
	+Server(const Server& s)
	+~Server()
	+operator=(const Server& s) : Server&
	+getReq(sckt::fd_type fd) : bool
	+getRequest(sckt::fd_type fd, std::string* request) : bool
	+start() : bool
	-_clients : clients_type
	-_port : int
	-_socket : sckt::Socket
	-_pfd : struct pollfd
	+connectClient() : void
	+disconnectClient(clients_type::iterator client) : void
	+manageClient(clients_type::iterator client) : void
	+stop() : void
	+update() : void
}


class ServerConfig {
	-ServerConfig(const std::string& filepath)
	-ServerConfig(ServerConfig &)
	-_parseHost(const std::string& host) : Host
	-_parseListen(parser::config::ScannerConfig& scanner) : Host
	-_parseServer(parser::config::ScannerConfig& scanner) : ServerBlock
	-operator=(const ServerConfig &) : ServerConfig&
	+{static} getInstance(std::string filepath) : ServerConfig*
	-{static} _singleton : static ServerConfig*
	-_configFilePath : std::string
	-_parseIndex(parser::config::ScannerConfig& scanner) : std::string
	-_parseRoot(parser::config::ScannerConfig& scanner) : std::string
	+getConfigFilePath() : std::string {query}
	-_servers : std::vector<ServerBlock>
	-_parse(std::istream &) : void
	-_parseErrorPage(parser::config::ScannerConfig& scanner) : void
	-_parseLocation(parser::config::ScannerConfig& scanner) : void
	-_parseServerName(parser::config::ScannerConfig& scanner) : void
	-_skipSemiColonNewLine(parser::config::ScannerConfig& scanner) : void
	-_throw_SyntaxError(parser::config::Token t, const std::string& error_str) : void
}


class ServerConfig::SyntaxError {
	+SyntaxError(const char* message)
	+SyntaxError(const std::string& message)
	+~SyntaxError()
	+what() : char*
	#_message : std::string
}


class ServerHandler {
	+ServerHandler(std::vector<int> ports)
	+~ServerHandler()
	-_servers : std::vector<Server>
	+run() : void
}


class Uri {
	+Uri()
	+Uri(const std::string& uri)
	+Uri(const std::string& scheme, const std::string& pathEtc)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& pathEtc)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& path, const std::string& query)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& path, const std::string& query, const std::string& fragment)
	+Uri(Uri &)
	+~Uri()
	+operator=(const Uri &) : Uri&
	+operator=(const std::string& uri) : Uri&
	+empty() : bool {query}
	+isRelative() : bool {query}
	+isWellKnownPort() : bool {query}
	-_fragment : std::string
	-_host : std::string
	-_path : std::string
	-_query : std::string
	-_scheme : std::string
	-_userInfo : std::string
	+decode(std::string s) : std::string {query}
	+getAuthority() : std::string {query}
	+getFragment() : std::string
	+getHost() : std::string
	+getPath() : std::string
	+getPathAndQuery() : std::string {query}
	+getPathEtc() : std::string {query}
	+getQuery() : std::string {query}
	+getRawQuery() : std::string
	+getScheme() : std::string
	+getUserInfo() : std::string
	+toString() : std::string
	-_port : u_short
	+getPort() : u_short {query}
	+getSpecifiedPort() : u_short
	+getWellKnownPort() : u_short {query}
	-_parseAuthority(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parseHostAndPort(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parsePathEtc(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parseUri(const std::string& uri) : void
	+clear() : void
	+setAuthority(const std::string &) : void
	+setFragment(const std::string &) : void
	+setHost(const std::string &) : void
	+setPath(const std::string &) : void
	+setPathEtc(const std::string &) : void
	+setPort(u_short) : void
	+setQuery(const std::string &) : void
	+setRawQuery(const std::string &) : void
	+setScheme(const std::string &) : void
	+setSpecifiedPort(u_short) : void
	+setUserInfo(const std::string &) : void
}


class Uri::SyntaxError {
	-what() : char*
}


enum HttpStatus::Code {
	Accepted
	AlreadyReported
	BadGateway
	BadRequest
	Conflict
	Continue
	Created
	EarlyHints
	ExpectationFailed
	FailedDependency
	Forbidden
	Found
	GatewayTimeout
	Gone
	HTTPVersionNotSupported
	IMUsed
	ImATeapot
	InsufficientStorage
	InternalServerError
	LengthRequired
	Locked
	LoopDetected
	MethodNotAllowed
	MovedPermanently
	MultiStatus
	MultipleChoices
	NetworkAuthenticationRequired
	NoContent
	NonAuthoritativeInformation
	NotAcceptable
	NotExtended
	NotFound
	NotImplemented
	NotModified
	OK
	PartialContent
	PayloadTooLarge
	PaymentRequired
	PermanentRedirect
	PreconditionFailed
	PreconditionRequired
	Processing
	ProxyAuthenticationRequired
	RangeNotSatisfiable
	RequestHeaderFieldsTooLarge
	RequestTimeout
	ResetContent
	SeeOther
	ServiceUnavailable
	SwitchingProtocols
	TemporaryRedirect
	TooManyRequests
	URITooLong
	Unauthorized
	UnavailableForLegalReasons
	UnprocessableEntity
	UnsupportedMediaType
	UpgradeRequired
	UseProxy
	VariantAlsoNegotiates
}


class Host {
	+port : int
	+host : std::string
}


class ServerBlock {
	+errors : std::map<u_short, std::string>
	+root : std::string
	+serverName : std::string
	+listens : std::vector<Host>
	+indexes : std::vector<std::string>
}


class ServerBlock::Location {
	+fastCgiPass : Host
	+path : Uri
	+autoindex : bool
	+client_max_body_size : size_t
}


namespace clnt {
	class Client {
		+Client()
		+~Client()
		-_socket : sckt::Socket
		+getAddr() : sckt::addr_type {query}
		+getFd() : sckt::fd_type {query}
		-_pfd : struct pollfd
		+getPfd() : struct pollfd {query}
		+setAddr(sckt::addr_type addr) : void
		+setFd(sckt::fd_type fd) : void
		+setPfd() : void
	}
}


namespace parser {
	abstract class IScanner {
		+~IScanner()
		+{abstract} eof() : bool
		+{abstract} get() : char
		+{abstract} peek() : char
		+{abstract} unget() : char
		+{abstract} getColumn() : int
		+{abstract} getLine() : int
	}

	class Scanner {
		-Scanner()
		+Scanner(std::istream& inputStream)
		+~Scanner()
		+eof() : bool
		-_c : char
		+get() : char
		+peek() : char
		+unget() : char
		-_column : int
		-_lastColumn : int
		-_line : int
		+getColumn() : int
		+getLine() : int
		-_inStream : std::istream&
		-moveBackward() : void
		-moveForward() : void
	}

	class ScannerFD {
		-ScannerFD()
		+ScannerFD(int fd)
		+~ScannerFD()
		+eof() : bool
		-_buffer : char
		-_c : char
		+get() : char
		+peek() : char
		+unget() : char
		-_column : int
		-_fd : int
		-_lastColumn : int
		-_line : int
		+getColumn() : int
		+getLine() : int
		-_idx : size_t
		+{static} bufferSize : static const size_t
		-moveBackward() : void
		-moveForward() : void
	}

	namespace parser::config {
		class ScannerConfig {
			+ScannerConfig(std::istream& inputStream)
			+~ScannerConfig()
			-_scan : Scanner
			-_actualToken : Token
			-_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token
			-_makeToken(ScopedEnum ::TokenKind kind, std::string value, int column, int line) : Token
			+getToken(bool skipNL) : Token
			+peekToken() : Token
			-_charIsString(char c) : bool
		}

		enum ScopedEnum::TokenKind {
			kColon
			kComma
			kEndOfInput
			kError
			kIdentifier
			kLeftBrace
			kNewLine
			kRightBrace
			kSemiColon
			kString
		}

		class ScopedEnum {
		}

		class Token {
			+kind : ScopedEnum ::TokenKind
			+column : int
			+line : int
			+value : std::string
		}
	}

	namespace parser::http {
		class ScannerHttpRequest {
			+ScannerHttpRequest(std::istream& inputStream)
			+~ScannerHttpRequest()
			-_scan : Scanner
			-_actualToken : Token
			-_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token
			+getToken(bool skipLWS) : Token
			+peekToken() : Token
			-_charIsString(char c) : bool
			+getChar() : char
		}

		enum ScopedEnum::TokenKind {
			kCarriage
			kColon
			kComma
			kEndOfInput
			kError
			kLWS
			kLeftBrace
			kNewLine
			kRightBrace
			kString
		}

		class ScopedEnum {
		}

		class Token {
			+kind : ScopedEnum ::TokenKind
			+column : int
			+line : int
			+value : std::string
		}
	}
}


namespace sckt {
	class Socket {
		+Socket()
		+~Socket()
		+getAddrLen() : addrLen_type {query}
		+getAddr() : addr_type {query}
		+setFd(int domain, int type) : bool
		+getFd() : fd_type {query}
		-_fd : int
		-_addrLen : sckt::socklen_t
		-_addr : struct sockaddr_in
		+setAddr(int domain, int interface, int port) : void
		+setAddr(struct sockaddr_in addr) : void
		+setFd(int fd) : void
	}
}





/' Inheritance relationships '/

.AHttpMessage <|- - .HttpRequest


.AHttpMessage <|- - .HttpResponse


parser.IScanner <|- - parser.Scanner


parser.IScanner <|- - parser.ScannerFD





/' Aggregation relationships '/

clnt.Client *- - sckt.Socket


.HttpRequest *- - .Uri


.HttpResponse *- - .HttpStatus


parser.parser::config.ScannerConfig *- - parser.Scanner


parser.parser::config.ScannerConfig "2" *- - parser.parser::http.Token


parser.parser::http.ScannerHttpRequest *- - parser.Scanner


parser.parser::http.ScannerHttpRequest "2" *- - parser.parser::http.Token


.Server *- - sckt.Socket


.ServerBlock *- - .Host


.ServerBlock::Location *- - .Host


.ServerBlock::Location *- - .Uri


.ServerConfig *- - .ServerBlock


.ServerConfig o- - .ServerConfig


.ServerHandler *- - .Server


parser.parser::http.Token "4" *- - parser.parser::http.ScopedEnum






/' Nested objects '/

.HttpStatus +- - .HttpStatus::Code


parser.parser::http.ScopedEnum +- - parser.parser::http.ScopedEnum::TokenKind


parser.parser::http.ScopedEnum +- - parser.parser::config.ScopedEnum::TokenKind


.ServerBlock +- - .ServerBlock::Location


.ServerConfig +- - .ServerConfig::SyntaxError


.Uri +- - .Uri::SyntaxError




@enduml

@startuml






class AHttpMessage {
	+AHttpMessage()
	+~AHttpMessage()
	#_headers : map_type
	+getHeaders() : map_type
	+getContentLength() : size_t
	#_content : std::string
	+getContent() : std::string
	+getHeader(std::string name) : std::string
	+addHeader(std::string name, std::string value) : void
	+readContent(std::istream is) : void
	+setContent(std::string content) : void
}


class HttpRequest {
	+HttpRequest()
	+~HttpRequest()
	+{static} create(std::istream& inputStream) : HttpRequest
	-_uri : Uri
	+getUri() : Uri&
	-_method : std::string
	-_version : std::string
	+toString() : std::string
	+getMethod() : std::string&
	+setMethod(std::string method) : void
	+setUri(const Uri& uri) : void
	+setVersion(std::string version) : void
	+write(std::ostream os) : void
}


class HttpResponse {
	+HttpResponse()
	+~HttpResponse()
	-_status : HttpStatus
	+getStatus() : int
	+getStatusMessage(int code) : std::string
	+toString() : std::string
	+read(std::istream is) : void
	+sendError(int code, std::ofstream out) : void
	+setContentLength(int contentLength) : void
	+setStatus(int code) : void
	+write(std::ostream os) : void
}


class HttpStatus {
	+HttpStatus()
	+~HttpStatus()
	+isClientError(int code) : bool
	+isError(int code) : bool
	+isInformational(int code) : bool
	+isRedirection(int code) : bool
	+isServerError(int code) : bool
	+isSuccessful(int code) : bool
	-_value : int
	+getValue() : int {query}
	+getMessage(int code) : std::string {query}
	+setValue(int code) : void
}


class Server {
	+Server(int port)
	+Server(const Server& s)
	+~Server()
	+operator=(const Server& s) : Server&
	+getReq(sckt::fd_type fd) : bool
	+getRequest(sckt::fd_type fd, std::string* request) : bool
	+start() : bool
	-_clients : clients_type
	-_port : int
	-_socket : sckt::Socket
	-_pfd : struct pollfd
	+connectClient() : void
	+disconnectClient(clients_type::iterator client) : void
	+manageClient(clients_type::iterator client) : void
	+stop() : void
	+update() : void
}


class ServerConfig {
	-ServerConfig(const std::string& filepath)
	-ServerConfig(ServerConfig &)
	-_parseHost(const std::string& host) : Host
	-_parseListen(parser::config::ScannerConfig& scanner) : Host
	-_parseServer(parser::config::ScannerConfig& scanner) : ServerBlock
	-operator=(const ServerConfig &) : ServerConfig&
	+{static} getInstance(std::string filepath) : ServerConfig*
	-{static} _singleton : static ServerConfig*
	-_configFilePath : std::string
	-_parseIndex(parser::config::ScannerConfig& scanner) : std::string
	-_parseRoot(parser::config::ScannerConfig& scanner) : std::string
	+getConfigFilePath() : std::string {query}
	-_servers : std::vector<ServerBlock>
	-_parse(std::istream &) : void
	-_parseErrorPage(parser::config::ScannerConfig& scanner) : void
	-_parseLocation(parser::config::ScannerConfig& scanner) : void
	-_parseServerName(parser::config::ScannerConfig& scanner) : void
	-_skipSemiColonNewLine(parser::config::ScannerConfig& scanner) : void
	-_throw_SyntaxError(parser::config::Token t, const std::string& error_str) : void
}


class ServerConfig::SyntaxError {
	+SyntaxError(const char* message)
	+SyntaxError(const std::string& message)
	+~SyntaxError()
	+what() : char*
	#_message : std::string
}


class ServerHandler {
	+ServerHandler(std::vector<int> ports)
	+~ServerHandler()
	-_servers : std::vector<Server>
	+run() : void
}


class Uri {
	+Uri()
	+Uri(const std::string& uri)
	+Uri(const std::string& scheme, const std::string& pathEtc)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& pathEtc)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& path, const std::string& query)
	+Uri(const std::string& scheme, const std::string& authority, const std::string& path, const std::string& query, const std::string& fragment)
	+Uri(Uri &)
	+~Uri()
	+operator=(const Uri &) : Uri&
	+operator=(const std::string& uri) : Uri&
	+empty() : bool {query}
	+isRelative() : bool {query}
	+isWellKnownPort() : bool {query}
	-_fragment : std::string
	-_host : std::string
	-_path : std::string
	-_query : std::string
	-_scheme : std::string
	-_userInfo : std::string
	+decode(std::string s) : std::string {query}
	+getAuthority() : std::string {query}
	+getFragment() : std::string
	+getHost() : std::string
	+getPath() : std::string
	+getPathAndQuery() : std::string {query}
	+getPathEtc() : std::string {query}
	+getQuery() : std::string {query}
	+getRawQuery() : std::string
	+getScheme() : std::string
	+getUserInfo() : std::string
	+toString() : std::string
	-_port : u_short
	+getPort() : u_short {query}
	+getSpecifiedPort() : u_short
	+getWellKnownPort() : u_short {query}
	-_parseAuthority(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parseHostAndPort(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parsePathEtc(std::string::const_iterator& it, const std::string::const_iterator& end) : void
	-_parseUri(const std::string& uri) : void
	+clear() : void
	+setAuthority(const std::string &) : void
	+setFragment(const std::string &) : void
	+setHost(const std::string &) : void
	+setPath(const std::string &) : void
	+setPathEtc(const std::string &) : void
	+setPort(u_short) : void
	+setQuery(const std::string &) : void
	+setRawQuery(const std::string &) : void
	+setScheme(const std::string &) : void
	+setSpecifiedPort(u_short) : void
	+setUserInfo(const std::string &) : void
}


class Uri::SyntaxError {
	-what() : char*
}


enum HttpStatus::Code {
	Accepted
	AlreadyReported
	BadGateway
	BadRequest
	Conflict
	Continue
	Created
	EarlyHints
	ExpectationFailed
	FailedDependency
	Forbidden
	Found
	GatewayTimeout
	Gone
	HTTPVersionNotSupported
	IMUsed
	ImATeapot
	InsufficientStorage
	InternalServerError
	LengthRequired
	Locked
	LoopDetected
	MethodNotAllowed
	MovedPermanently
	MultiStatus
	MultipleChoices
	NetworkAuthenticationRequired
	NoContent
	NonAuthoritativeInformation
	NotAcceptable
	NotExtended
	NotFound
	NotImplemented
	NotModified
	OK
	PartialContent
	PayloadTooLarge
	PaymentRequired
	PermanentRedirect
	PreconditionFailed
	PreconditionRequired
	Processing
	ProxyAuthenticationRequired
	RangeNotSatisfiable
	RequestHeaderFieldsTooLarge
	RequestTimeout
	ResetContent
	SeeOther
	ServiceUnavailable
	SwitchingProtocols
	TemporaryRedirect
	TooManyRequests
	URITooLong
	Unauthorized
	UnavailableForLegalReasons
	UnprocessableEntity
	UnsupportedMediaType
	UpgradeRequired
	UseProxy
	VariantAlsoNegotiates
}


class Host {
	+port : int
	+host : std::string
}


class ServerBlock {
	+errors : std::map<u_short, std::string>
	+root : std::string
	+serverName : std::string
	+listens : std::vector<Host>
	+indexes : std::vector<std::string>
}


class ServerBlock::Location {
	+fastCgiPass : Host
	+path : Uri
	+autoindex : bool
	+client_max_body_size : size_t
}


namespace clnt {
	class Client {
		+Client()
		+~Client()
		-_socket : sckt::Socket
		+getAddr() : sckt::addr_type {query}
		+getFd() : sckt::fd_type {query}
		-_pfd : struct pollfd
		+getPfd() : struct pollfd {query}
		+setAddr(sckt::addr_type addr) : void
		+setFd(sckt::fd_type fd) : void
		+setPfd() : void
	}
}


namespace parser {
	abstract class IScanner {
		+~IScanner()
		+{abstract} eof() : bool
		+{abstract} get() : char
		+{abstract} peek() : char
		+{abstract} unget() : char
		+{abstract} getColumn() : int
		+{abstract} getLine() : int
	}

	class Scanner {
		-Scanner()
		+Scanner(std::istream& inputStream)
		+~Scanner()
		+eof() : bool
		-_c : char
		+get() : char
		+peek() : char
		+unget() : char
		-_column : int
		-_lastColumn : int
		-_line : int
		+getColumn() : int
		+getLine() : int
		-_inStream : std::istream&
		-moveBackward() : void
		-moveForward() : void
	}

	class ScannerFD {
		-ScannerFD()
		+ScannerFD(int fd)
		+~ScannerFD()
		+eof() : bool
		-_buffer : char
		-_c : char
		+get() : char
		+peek() : char
		+unget() : char
		-_column : int
		-_fd : int
		-_lastColumn : int
		-_line : int
		+getColumn() : int
		+getLine() : int
		-_idx : size_t
		+{static} bufferSize : static const size_t
		-moveBackward() : void
		-moveForward() : void
	}

	namespace parser::config {
		class ScannerConfig {
			+ScannerConfig(std::istream& inputStream)
			+~ScannerConfig()
			-_scan : Scanner
			-_actualToken : Token
			-_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token
			-_makeToken(ScopedEnum ::TokenKind kind, std::string value, int column, int line) : Token
			+getToken(bool skipNL) : Token
			+peekToken() : Token
			-_charIsString(char c) : bool
		}

		enum ScopedEnum::TokenKind {
			kColon
			kComma
			kEndOfInput
			kError
			kIdentifier
			kLeftBrace
			kNewLine
			kRightBrace
			kSemiColon
			kString
		}

		class ScopedEnum {
		}

		class Token {
			+kind : ScopedEnum ::TokenKind
			+column : int
			+line : int
			+value : std::string
		}
	}

	namespace parser::http {
		class ScannerHttpRequest {
			+ScannerHttpRequest(std::istream& inputStream)
			+~ScannerHttpRequest()
			-_scan : Scanner
			-_actualToken : Token
			-_makeToken(ScopedEnum ::TokenKind kind, std::string value) : Token
			+getToken(bool skipLWS) : Token
			+peekToken() : Token
			-_charIsString(char c) : bool
			+getChar() : char
		}

		enum ScopedEnum::TokenKind {
			kCarriage
			kColon
			kComma
			kEndOfInput
			kError
			kLWS
			kLeftBrace
			kNewLine
			kRightBrace
			kString
		}

		class ScopedEnum {
		}

		class Token {
			+kind : ScopedEnum ::TokenKind
			+column : int
			+line : int
			+value : std::string
		}
	}
}


namespace sckt {
	class Socket {
		+Socket()
		+~Socket()
		+getAddrLen() : addrLen_type {query}
		+getAddr() : addr_type {query}
		+setFd(int domain, int type) : bool
		+getFd() : fd_type {query}
		-_fd : int
		-_addrLen : sckt::socklen_t
		-_addr : struct sockaddr_in
		+setAddr(int domain, int interface, int port) : void
		+setAddr(struct sockaddr_in addr) : void
		+setFd(int fd) : void
	}
}






.AHttpMessage <|- - .HttpRequest


.AHttpMessage <|- - .HttpResponse


parser.IScanner <|- - parser.Scanner


parser.IScanner <|- - parser.ScannerFD






clnt.Client *- - sckt.Socket


.HttpRequest *- - .Uri


.HttpResponse *- - .HttpStatus


parser.parser::config.ScannerConfig *- - parser.Scanner


parser.parser::config.ScannerConfig "2" *- - parser.parser::http.Token


parser.parser::http.ScannerHttpRequest *- - parser.Scanner


parser.parser::http.ScannerHttpRequest "2" *- - parser.parser::http.Token


.Server *- - sckt.Socket


.ServerBlock *- - .Host


.ServerBlock::Location *- - .Host


.ServerBlock::Location *- - .Uri


.ServerConfig *- - .ServerBlock


.ServerConfig o- - .ServerConfig


.ServerHandler *- - .Server


parser.parser::http.Token "4" *- - parser.parser::http.ScopedEnum







.HttpStatus +- - .HttpStatus::Code


parser.parser::http.ScopedEnum +- - parser.parser::http.ScopedEnum::TokenKind


parser.parser::http.ScopedEnum +- - parser.parser::config.ScopedEnum::TokenKind


.ServerBlock +- - .ServerBlock::Location


.ServerConfig +- - .ServerConfig::SyntaxError


.Uri +- - .Uri::SyntaxError




@enduml

PlantUML version 1.2021.9(Sun Jul 25 12:13:56 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>